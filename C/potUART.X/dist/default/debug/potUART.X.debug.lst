

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 26 23:00:07 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 21/07/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F45K50 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     _RCREG	set	4014
    62   000000                     _TXREG	set	4013
    63   000000                     _SPBRG	set	4015
    64   000000                     _TXSTAbits	set	4012
    65   000000                     _ANSELA	set	3931
    66   000000                     _ANSELD	set	3934
    67   000000                     _PORTD	set	3971
    68   000000                     _ADCON0bits	set	4034
    69   000000                     _OSCCON2	set	4050
    70   000000                     _OSCCON	set	4051
    71   000000                     _ADRESL	set	4035
    72   000000                     _TRISA	set	3986
    73   000000                     _TRISD	set	3989
    74   000000                     _RCSTAbits	set	4011
    75   000000                     _ADCON2bits	set	4032
    76   000000                     _ADCON1bits	set	4033
    77   000000                     _TRISCbits	set	3988
    78   000000                     _ANSELC	set	3933
    79                           
    80                           	psect	smallconst
    81   000800                     __psmallconst:
    82                           	callstack 0
    83   000800  00                 	db	0
    84   000801                     STR_1:
    85   000801  25                 	db	37
    86   000802  64                 	db	100	;'d'
    87   000803  00                 	db	0
    88   000804  00                 	db	0	; dummy byte at the end
    89   000000                     
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   000D04                     __pcinit:
    94                           	callstack 0
    95   000D04                     start_initialization:
    96                           	callstack 0
    97   000D04                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Clear objects allocated to BANK0 (40 bytes)
   101   000D04  EE00  F060         	lfsr	0,__pbssBANK0
   102   000D08  0E28               	movlw	40
   103   000D0A                     clear_0:
   104   000D0A  6AEE               	clrf	postinc0,c
   105   000D0C  06E8               	decf	wreg,f,c
   106   000D0E  E1FD               	bnz	clear_0
   107                           
   108                           ; Clear objects allocated to COMRAM (37 bytes)
   109   000D10  EE00  F02D         	lfsr	0,__pbssCOMRAM
   110   000D14  0E25               	movlw	37
   111   000D16                     clear_1:
   112   000D16  6AEE               	clrf	postinc0,c
   113   000D18  06E8               	decf	wreg,f,c
   114   000D1A  E1FD               	bnz	clear_1
   115   000D1C                     end_of_initialization:
   116                           	callstack 0
   117   000D1C                     __end_of__initialization:
   118                           	callstack 0
   119   000D1C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   120   000D1E  6EF8               	movwf	tblptru,c
   121   000D20  0E08               	movlw	high __Lsmallconst
   122   000D22  6EF7               	movwf	tblptrh,c
   123   000D24  0100               	movlb	0
   124   000D26  EFE6  F005         	goto	_main	;jump to C main() function
   125                           
   126                           	psect	bssCOMRAM
   127   00002D                     __pbssCOMRAM:
   128                           	callstack 0
   129   00002D                     _dbuf:
   130                           	callstack 0
   131   00002D                     	ds	32
   132   00004D                     _width:
   133                           	callstack 0
   134   00004D                     	ds	2
   135   00004F                     _prec:
   136                           	callstack 0
   137   00004F                     	ds	2
   138   000051                     _flags:
   139                           	callstack 0
   140   000051                     	ds	1
   141                           
   142                           	psect	bssBANK0
   143   000060                     __pbssBANK0:
   144                           	callstack 0
   145   000060                     _datos:
   146                           	callstack 0
   147   000060                     	ds	40
   148                           
   149                           	psect	cstackCOMRAM
   150   000001                     __pcstackCOMRAM:
   151                           	callstack 0
   152   000001                     ?___awdiv:
   153                           	callstack 0
   154   000001                     ?___awmod:
   155                           	callstack 0
   156   000001                     USART_Transmit@str:
   157                           	callstack 0
   158   000001                     ___awdiv@dividend:
   159                           	callstack 0
   160   000001                     ___awmod@dividend:
   161                           	callstack 0
   162   000001                     fputc@c:
   163                           	callstack 0
   164                           
   165                           ; 2 bytes @ 0x0
   166   000001                     	ds	1
   167   000002                     
   168                           ; 1 bytes @ 0x1
   169   000002                     	ds	1
   170   000003                     fputc@fp:
   171                           	callstack 0
   172   000003                     ___awdiv@divisor:
   173                           	callstack 0
   174   000003                     ___awmod@divisor:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x2
   178   000003                     	ds	1
   179   000004                     ??_fputc:
   180                           
   181                           ; 1 bytes @ 0x3
   182   000004                     	ds	1
   183   000005                     ___awdiv@counter:
   184                           	callstack 0
   185   000005                     ___awmod@counter:
   186                           	callstack 0
   187                           
   188                           ; 1 bytes @ 0x4
   189   000005                     	ds	1
   190   000006                     ___awdiv@sign:
   191                           	callstack 0
   192   000006                     ___awmod@sign:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0x5
   196   000006                     	ds	1
   197   000007                     ?_abs:
   198                           	callstack 0
   199   000007                     ___awdiv@quotient:
   200                           	callstack 0
   201   000007                     abs@a:
   202                           	callstack 0
   203                           
   204                           ; 2 bytes @ 0x6
   205   000007                     	ds	2
   206   000009                     ??_abs:
   207                           
   208                           ; 1 bytes @ 0x8
   209   000009                     	ds	2
   210   00000B                     vfpfcnvrt@fp:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0xA
   214   00000B                     	ds	1
   215   00000C                     vfpfcnvrt@fmt:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0xB
   219   00000C                     	ds	1
   220   00000D                     vfpfcnvrt@ap:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0xC
   224   00000D                     	ds	1
   225   00000E                     ??_vfpfcnvrt:
   226                           
   227                           ; 1 bytes @ 0xD
   228   00000E                     	ds	1
   229   00000F                     vfpfcnvrt@done:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0xE
   233   00000F                     	ds	1
   234   000010                     vfpfcnvrt@cp:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0xF
   238   000010                     	ds	1
   239   000011                     vfpfcnvrt@convarg:
   240                           	callstack 0
   241                           
   242                           ; 4 bytes @ 0x10
   243   000011                     	ds	4
   244   000015                     vfpfcnvrt@c:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x14
   248   000015                     	ds	1
   249   000016                     ?_vfprintf:
   250                           	callstack 0
   251   000016                     vfprintf@fp:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0x15
   255   000016                     	ds	1
   256   000017                     vfprintf@fmt:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x16
   260   000017                     	ds	1
   261   000018                     vfprintf@ap:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x17
   265   000018                     	ds	1
   266   000019                     vfprintf@cfmt:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x18
   270   000019                     	ds	1
   271   00001A                     ?_sprintf:
   272                           	callstack 0
   273   00001A                     sprintf@s:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x19
   277   00001A                     	ds	1
   278   00001B                     sprintf@fmt:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x1A
   282   00001B                     	ds	3
   283   00001E                     sprintf@ap:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x1D
   287   00001E                     	ds	1
   288   00001F                     sprintf@f:
   289                           	callstack 0
   290                           
   291                           ; 12 bytes @ 0x1E
   292   00001F                     	ds	12
   293   00002B                     ??_main:
   294                           
   295                           ; 1 bytes @ 0x2A
   296   00002B                     	ds	2
   297                           
   298 ;;
   299 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   300 ;;
   301 ;; *************** function _main *****************
   302 ;; Defined at:
   303 ;;		line 15 in file "xd.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
   317 ;;      Params:         0       0       0       0       0       0       0       0       0
   318 ;;      Locals:         0       0       0       0       0       0       0       0       0
   319 ;;      Temps:          2       0       0       0       0       0       0       0       0
   320 ;;      Totals:         2       0       0       0       0       0       0       0       0
   321 ;;Total ram usage:        2 bytes
   322 ;; Hardware stack levels required when called: 5
   323 ;; This function calls:
   324 ;;		_ADC_Init
   325 ;;		_GPIO_Init
   326 ;;		_USART_Init
   327 ;;		_USART_Transmit
   328 ;;		_sprintf
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text0
   335   000BCC                     __ptext0:
   336                           	callstack 0
   337   000BCC                     _main:
   338                           	callstack 26
   339   000BCC                     
   340                           ;xd.c: 18:     OSCCON = 0x52;
   341   000BCC  0E52               	movlw	82
   342   000BCE  6ED3               	movwf	211,c	;volatile
   343                           
   344                           ;xd.c: 19:     OSCCON2 = 0;
   345   000BD0  0E00               	movlw	0
   346   000BD2  6ED2               	movwf	210,c	;volatile
   347   000BD4                     
   348                           ;xd.c: 22:     GPIO_Init();
   349   000BD4  ECA6  F006         	call	_GPIO_Init	;wreg free
   350   000BD8                     
   351                           ;xd.c: 23:     ADC_Init();
   352   000BD8  EC95  F006         	call	_ADC_Init	;wreg free
   353   000BDC                     
   354                           ;xd.c: 24:     USART_Init();
   355   000BDC  ECB2  F006         	call	_USART_Init	;wreg free
   356   000BE0                     l1263:
   357                           
   358                           ;xd.c: 27:     {;xd.c: 28:         ADCON0bits.GODONE = 1;
   359   000BE0  82C2               	bsf	194,1,c	;volatile
   360   000BE2                     l56:
   361   000BE2  B2C2               	btfsc	194,1,c	;volatile
   362   000BE4  EFF6  F005         	goto	u621
   363   000BE8  EFF8  F005         	goto	u620
   364   000BEC                     u621:
   365   000BEC  EFF1  F005         	goto	l56
   366   000BF0                     u620:
   367   000BF0                     
   368                           ;xd.c: 30:         PORTD = ADRESL;
   369   000BF0  CFC3 FF83          	movff	4035,3971	;volatile
   370   000BF4                     
   371                           ;xd.c: 31:         sprintf(datos,"%d",ADRESL);
   372   000BF4  0E60               	movlw	low _datos
   373   000BF6  6E1A               	movwf	sprintf@s^0,c
   374   000BF8  0E01               	movlw	low STR_1
   375   000BFA  6E1B               	movwf	sprintf@fmt^0,c
   376   000BFC  CFC3 F01C          	movff	4035,?_sprintf+2	;volatile
   377   000C00  6A1D               	clrf	(?_sprintf+3)^0,c
   378   000C02  EC4E  F006         	call	_sprintf	;wreg free
   379   000C06                     
   380                           ;xd.c: 32:         USART_Transmit(datos);
   381   000C06  0E60               	movlw	low _datos
   382   000C08  6E01               	movwf	USART_Transmit@str^0,c
   383   000C0A  EC33  F006         	call	_USART_Transmit	;wreg free
   384   000C0E                     
   385                           ;xd.c: 33:         _delay((unsigned long)((500)*(4000000L/4000.0)));
   386   000C0E  0E03               	movlw	3
   387   000C10  6E2C               	movwf	(??_main+1)^0,c
   388   000C12  0E8A               	movlw	138
   389   000C14  6E2B               	movwf	??_main^0,c
   390   000C16  0E56               	movlw	86
   391   000C18                     u637:
   392   000C18  2EE8               	decfsz	wreg,f,c
   393   000C1A  D7FE               	bra	u637
   394   000C1C  2E2B               	decfsz	??_main^0,f,c
   395   000C1E  D7FC               	bra	u637
   396   000C20  2E2C               	decfsz	(??_main+1)^0,f,c
   397   000C22  D7FA               	bra	u637
   398   000C24  EFF0  F005         	goto	l1263
   399   000C28  EF01  F000         	goto	start
   400   000C2C                     __end_of_main:
   401                           	callstack 0
   402                           
   403 ;; *************** function _sprintf *****************
   404 ;; Defined at:
   405 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;  s               1   25[COMRAM] PTR unsigned char 
   408 ;;		 -> datos(40), 
   409 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
   410 ;;		 -> STR_1(3), 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  f              12   30[COMRAM] struct _IO_FILE
   413 ;;  ret             2    0        int 
   414 ;;  ap              1   29[COMRAM] PTR void [1]
   415 ;;		 -> ?_sprintf(2), 
   416 ;; Return value:  Size  Location     Type
   417 ;;                  2   25[COMRAM] int 
   418 ;; Registers used:
   419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
   425 ;;      Params:         4       0       0       0       0       0       0       0       0
   426 ;;      Locals:        13       0       0       0       0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0       0       0       0       0
   428 ;;      Totals:        17       0       0       0       0       0       0       0       0
   429 ;;Total ram usage:       17 bytes
   430 ;; Hardware stack levels used: 1
   431 ;; Hardware stack levels required when called: 4
   432 ;; This function calls:
   433 ;;		_vfprintf
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text1
   440   000C9C                     __ptext1:
   441                           	callstack 0
   442   000C9C                     _sprintf:
   443                           	callstack 26
   444   000C9C  0E1C               	movlw	low (?_sprintf+2)
   445   000C9E  6E1E               	movwf	sprintf@ap^0,c
   446   000CA0  C01A  F01F         	movff	sprintf@s,sprintf@f
   447   000CA4  0E00               	movlw	0
   448   000CA6  6E23               	movwf	(sprintf@f+4)^0,c
   449   000CA8  0E00               	movlw	0
   450   000CAA  6E22               	movwf	(sprintf@f+3)^0,c
   451   000CAC  0E00               	movlw	0
   452   000CAE  6E2A               	movwf	(sprintf@f+11)^0,c
   453   000CB0  0E00               	movlw	0
   454   000CB2  6E29               	movwf	(sprintf@f+10)^0,c
   455   000CB4  0E1F               	movlw	low sprintf@f
   456   000CB6  6E16               	movwf	vfprintf@fp^0,c
   457   000CB8  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
   458   000CBC  0E1E               	movlw	low sprintf@ap
   459   000CBE  6E18               	movwf	vfprintf@ap^0,c
   460   000CC0  EC16  F006         	call	_vfprintf	;wreg free
   461   000CC4  501A               	movf	sprintf@s^0,w,c
   462   000CC6  2422               	addwf	(sprintf@f+3)^0,w,c
   463   000CC8  6ED9               	movwf	fsr2l,c
   464   000CCA  6ADA               	clrf	fsr2h,c
   465   000CCC  6ADF               	clrf	indf2,c
   466   000CCE  0012               	return		;funcret
   467   000CD0                     __end_of_sprintf:
   468                           	callstack 0
   469                           
   470 ;; *************** function _vfprintf *****************
   471 ;; Defined at:
   472 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
   475 ;;		 -> sprintf@f(12), 
   476 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
   477 ;;		 -> STR_1(3), 
   478 ;;  ap              1   23[COMRAM] PTR PTR void 
   479 ;;		 -> sprintf@ap(1), 
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
   482 ;;		 -> STR_1(3), 
   483 ;; Return value:  Size  Location     Type
   484 ;;                  2   21[COMRAM] int 
   485 ;; Registers used:
   486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
   492 ;;      Params:         3       0       0       0       0       0       0       0       0
   493 ;;      Locals:         1       0       0       0       0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0       0       0       0       0
   495 ;;      Totals:         4       0       0       0       0       0       0       0       0
   496 ;;Total ram usage:        4 bytes
   497 ;; Hardware stack levels used: 1
   498 ;; Hardware stack levels required when called: 3
   499 ;; This function calls:
   500 ;;		_vfpfcnvrt
   501 ;; This function is called by:
   502 ;;		_sprintf
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text2
   507   000C2C                     __ptext2:
   508                           	callstack 0
   509   000C2C                     _vfprintf:
   510                           	callstack 26
   511   000C2C                     
   512                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   513   000C2C  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
   514                           
   515                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   516   000C30  EF22  F006         	goto	l1209
   517   000C34                     l1207:
   518                           
   519                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   520   000C34  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
   521   000C38  0E19               	movlw	low vfprintf@cfmt
   522   000C3A  6E0C               	movwf	vfpfcnvrt@fmt^0,c
   523   000C3C  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
   524   000C40  EC03  F004         	call	_vfpfcnvrt	;wreg free
   525   000C44                     l1209:
   526                           
   527                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   528   000C44  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
   529   000C48                     	if	0	;There is only one active tblptr byte
   530   000C48                     	endif
   531   000C48                     	if	0	;tblptru may be non-zero
   532   000C48                     	endif
   533   000C48                     	if	0	;tblptru may be non-zero
   534   000C48                     	endif
   535   000C48  0008               	tblrd		*
   536   000C4A  50F5               	movf	tablat,w,c
   537   000C4C  0900               	iorlw	0
   538   000C4E  A4D8               	btfss	status,2,c
   539   000C50  EF2C  F006         	goto	u591
   540   000C54  EF2E  F006         	goto	u590
   541   000C58                     u591:
   542   000C58  EF1A  F006         	goto	l1207
   543   000C5C                     u590:
   544   000C5C                     
   545                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   546   000C5C  0E00               	movlw	0
   547   000C5E  6E17               	movwf	(?_vfprintf+1)^0,c
   548   000C60  0E00               	movlw	0
   549   000C62  6E16               	movwf	?_vfprintf^0,c
   550   000C64  0012               	return		;funcret
   551   000C66                     __end_of_vfprintf:
   552                           	callstack 0
   553                           
   554 ;; *************** function _vfpfcnvrt *****************
   555 ;; Defined at:
   556 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
   559 ;;		 -> sprintf@f(12), 
   560 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
   561 ;;		 -> vfprintf@cfmt(1), 
   562 ;;  ap              1   12[COMRAM] PTR PTR void 
   563 ;;		 -> sprintf@ap(1), 
   564 ;; Auto vars:     Size  Location     Type
   565 ;;  convarg         4   16[COMRAM] struct .
   566 ;;  c               1   20[COMRAM] unsigned char 
   567 ;;  cp              1   15[COMRAM] PTR unsigned char 
   568 ;;		 -> STR_1(3), 
   569 ;;  done            1   14[COMRAM] _Bool 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
   579 ;;      Params:         3       0       0       0       0       0       0       0       0
   580 ;;      Locals:         7       0       0       0       0       0       0       0       0
   581 ;;      Temps:          1       0       0       0       0       0       0       0       0
   582 ;;      Totals:        11       0       0       0       0       0       0       0       0
   583 ;;Total ram usage:       11 bytes
   584 ;; Hardware stack levels used: 1
   585 ;; Hardware stack levels required when called: 2
   586 ;; This function calls:
   587 ;;		___awdiv
   588 ;;		___awmod
   589 ;;		_abs
   590 ;;		_fputc
   591 ;; This function is called by:
   592 ;;		_vfprintf
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text3
   597   000806                     __ptext3:
   598                           	callstack 0
   599   000806                     _vfpfcnvrt:
   600                           	callstack 26
   601   000806                     
   602                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   603   000806  500C               	movf	vfpfcnvrt@fmt^0,w,c
   604   000808  6ED9               	movwf	fsr2l,c
   605   00080A  6ADA               	clrf	fsr2h,c
   606   00080C  CFDF FFF6          	movff	indf2,tblptrl
   607   000810                     	if	0	;There is only one active tblptr byte
   608   000810                     	endif
   609   000810                     	if	0	;tblptru may be non-zero
   610   000810                     	endif
   611   000810                     	if	0	;tblptru may be non-zero
   612   000810                     	endif
   613   000810  0008               	tblrd		*
   614   000812  50F5               	movf	tablat,w,c
   615   000814  0A25               	xorlw	37
   616   000816  A4D8               	btfss	status,2,c
   617   000818  EF10  F004         	goto	u491
   618   00081C  EF12  F004         	goto	u490
   619   000820                     u491:
   620   000820  EFC7  F004         	goto	l1199
   621   000824                     u490:
   622   000824                     
   623                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   624   000824  500C               	movf	vfpfcnvrt@fmt^0,w,c
   625   000826  6ED9               	movwf	fsr2l,c
   626   000828  6ADA               	clrf	fsr2h,c
   627   00082A  2ADF               	incf	indf2,f,c
   628   00082C                     
   629                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   630   00082C  0E00               	movlw	0
   631   00082E  6E4E               	movwf	(_width+1)^0,c
   632   000830  0E00               	movlw	0
   633   000832  6E4D               	movwf	_width^0,c
   634   000834  C04D  F051         	movff	_width,_flags
   635   000838                     
   636                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   637   000838  684F               	setf	_prec^0,c
   638   00083A  6850               	setf	(_prec+1)^0,c
   639   00083C                     
   640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   641   00083C  500C               	movf	vfpfcnvrt@fmt^0,w,c
   642   00083E  6ED9               	movwf	fsr2l,c
   643   000840  6ADA               	clrf	fsr2h,c
   644   000842  50DF               	movf	indf2,w,c
   645   000844  6E10               	movwf	vfpfcnvrt@cp^0,c
   646   000846                     
   647                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   648   000846  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   649   00084A                     	if	0	;There is only one active tblptr byte
   650   00084A                     	endif
   651   00084A                     	if	0	;tblptru may be non-zero
   652   00084A                     	endif
   653   00084A                     	if	0	;tblptru may be non-zero
   654   00084A                     	endif
   655   00084A  0008               	tblrd		*
   656   00084C  50F5               	movf	tablat,w,c
   657   00084E  0A64               	xorlw	100
   658   000850  B4D8               	btfsc	status,2,c
   659   000852  EF2D  F004         	goto	u501
   660   000856  EF2F  F004         	goto	u500
   661   00085A                     u501:
   662   00085A  EF3B  F004         	goto	l1169
   663   00085E                     u500:
   664   00085E  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   665   000862                     	if	0	;There is only one active tblptr byte
   666   000862                     	endif
   667   000862                     	if	0	;tblptru may be non-zero
   668   000862                     	endif
   669   000862                     	if	0	;tblptru may be non-zero
   670   000862                     	endif
   671   000862  0008               	tblrd		*
   672   000864  50F5               	movf	tablat,w,c
   673   000866  0A69               	xorlw	105
   674   000868  A4D8               	btfss	status,2,c
   675   00086A  EF39  F004         	goto	u511
   676   00086E  EF3B  F004         	goto	u510
   677   000872                     u511:
   678   000872  EFC1  F004         	goto	l1195
   679   000876                     u510:
   680   000876                     l1169:
   681                           
   682                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
   683   000876  500D               	movf	vfpfcnvrt@ap^0,w,c
   684   000878  6ED9               	movwf	fsr2l,c
   685   00087A  6ADA               	clrf	fsr2h,c
   686   00087C  0E02               	movlw	2
   687   00087E  26DF               	addwf	indf2,f,c
   688   000880  5CDF               	subwf	indf2,w,c
   689   000882  6ED9               	movwf	fsr2l,c
   690   000884  6ADA               	clrf	fsr2h,c
   691   000886  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
   692   00088A  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
   693   00088E                     
   694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
   695   00088E  500C               	movf	vfpfcnvrt@fmt^0,w,c
   696   000890  6ED9               	movwf	fsr2l,c
   697   000892  6ADA               	clrf	fsr2h,c
   698   000894  2810               	incf	vfpfcnvrt@cp^0,w,c
   699   000896  6EDF               	movwf	indf2,c
   700   000898                     
   701                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
   702   000898  0E20               	movlw	32
   703   00089A  6E15               	movwf	vfpfcnvrt@c^0,c
   704                           
   705                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
   706   00089C  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
   707   00089E  EF53  F004         	goto	u521
   708   0008A2  EF56  F004         	goto	u520
   709   0008A6                     u521:
   710   0008A6  0E01               	movlw	1
   711   0008A8  EF57  F004         	goto	u530
   712   0008AC                     u520:
   713   0008AC  0E00               	movlw	0
   714   0008AE                     u530:
   715   0008AE  6E0F               	movwf	vfpfcnvrt@done^0,c
   716   0008B0                     l1175:
   717                           
   718                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
   719   0008B0  0615               	decf	vfpfcnvrt@c^0,f,c
   720   0008B2  5015               	movf	vfpfcnvrt@c^0,w,c
   721   0008B4  0F2D               	addlw	low _dbuf
   722   0008B6  6ED9               	movwf	fsr2l,c
   723   0008B8  6ADA               	clrf	fsr2h,c
   724   0008BA  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
   725   0008BE  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
   726   0008C2  0E00               	movlw	0
   727   0008C4  6E04               	movwf	(___awmod@divisor+1)^0,c
   728   0008C6  0E0A               	movlw	10
   729   0008C8  6E03               	movwf	___awmod@divisor^0,c
   730   0008CA  EC39  F005         	call	___awmod	;wreg free
   731   0008CE  C001  F007         	movff	?___awmod,abs@a
   732   0008D2  C002  F008         	movff	?___awmod+1,abs@a+1
   733   0008D6  EC68  F006         	call	_abs	;wreg free
   734   0008DA  5007               	movf	?_abs^0,w,c
   735   0008DC  0F30               	addlw	48
   736   0008DE  6EDF               	movwf	indf2,c
   737   0008E0                     
   738                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
   739   0008E0  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
   740   0008E4  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
   741   0008E8  0E00               	movlw	0
   742   0008EA  6E04               	movwf	(___awdiv@divisor+1)^0,c
   743   0008EC  0E0A               	movlw	10
   744   0008EE  6E03               	movwf	___awdiv@divisor^0,c
   745   0008F0  ECD7  F004         	call	___awdiv	;wreg free
   746   0008F4  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
   747   0008F8  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
   748   0008FC                     
   749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
   750   0008FC  5011               	movf	vfpfcnvrt@convarg^0,w,c
   751   0008FE  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
   752   000900  B4D8               	btfsc	status,2,c
   753   000902  EF85  F004         	goto	u541
   754   000906  EF87  F004         	goto	u540
   755   00090A                     u541:
   756   00090A  EF8F  F004         	goto	l1183
   757   00090E                     u540:
   758   00090E  5015               	movf	vfpfcnvrt@c^0,w,c
   759   000910  A4D8               	btfss	status,2,c
   760   000912  EF8D  F004         	goto	u551
   761   000916  EF8F  F004         	goto	u550
   762   00091A                     u551:
   763   00091A  EF58  F004         	goto	l1175
   764   00091E                     u550:
   765   00091E                     l1183:
   766                           
   767                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
   768   00091E  5015               	movf	vfpfcnvrt@c^0,w,c
   769   000920  B4D8               	btfsc	status,2,c
   770   000922  EF95  F004         	goto	u561
   771   000926  EF97  F004         	goto	u560
   772   00092A                     u561:
   773   00092A  EFB6  F004         	goto	l1193
   774   00092E                     u560:
   775   00092E  500F               	movf	vfpfcnvrt@done^0,w,c
   776   000930  B4D8               	btfsc	status,2,c
   777   000932  EF9D  F004         	goto	u571
   778   000936  EF9F  F004         	goto	u570
   779   00093A                     u571:
   780   00093A  EFB6  F004         	goto	l1193
   781   00093E                     u570:
   782   00093E                     
   783                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
   784   00093E  0615               	decf	vfpfcnvrt@c^0,f,c
   785   000940  5015               	movf	vfpfcnvrt@c^0,w,c
   786   000942  0F2D               	addlw	low _dbuf
   787   000944  6ED9               	movwf	fsr2l,c
   788   000946  6ADA               	clrf	fsr2h,c
   789   000948  0E2D               	movlw	45
   790   00094A  6EDF               	movwf	indf2,c
   791   00094C  EFB6  F004         	goto	l1193
   792   000950                     l1189:
   793                           
   794                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
   795   000950  5015               	movf	vfpfcnvrt@c^0,w,c
   796   000952  0F2D               	addlw	low _dbuf
   797   000954  6ED9               	movwf	fsr2l,c
   798   000956  6ADA               	clrf	fsr2h,c
   799   000958  50DF               	movf	indf2,w,c
   800   00095A  6E0E               	movwf	??_vfpfcnvrt^0,c
   801   00095C  500E               	movf	??_vfpfcnvrt^0,w,c
   802   00095E  6E01               	movwf	fputc@c^0,c
   803   000960  6A02               	clrf	(fputc@c+1)^0,c
   804   000962  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
   805   000966  EC91  F005         	call	_fputc	;wreg free
   806   00096A  2A15               	incf	vfpfcnvrt@c^0,f,c
   807   00096C                     l1193:
   808                           
   809                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
   810   00096C  0E20               	movlw	32
   811   00096E  1815               	xorwf	vfpfcnvrt@c^0,w,c
   812   000970  A4D8               	btfss	status,2,c
   813   000972  EFBD  F004         	goto	u581
   814   000976  EFBF  F004         	goto	u580
   815   00097A                     u581:
   816   00097A  EFA8  F004         	goto	l1189
   817   00097E                     u580:
   818   00097E  EFD6  F004         	goto	l801
   819   000982                     l1195:
   820                           
   821                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
   822   000982  500C               	movf	vfpfcnvrt@fmt^0,w,c
   823   000984  6ED9               	movwf	fsr2l,c
   824   000986  6ADA               	clrf	fsr2h,c
   825   000988  2ADF               	incf	indf2,f,c
   826   00098A  EFD6  F004         	goto	l801
   827   00098E                     l1199:
   828                           
   829                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
   830   00098E  500C               	movf	vfpfcnvrt@fmt^0,w,c
   831   000990  6ED9               	movwf	fsr2l,c
   832   000992  6ADA               	clrf	fsr2h,c
   833   000994  CFDF FFF6          	movff	indf2,tblptrl
   834   000998                     	if	0	;There is only one active tblptr byte
   835   000998                     	endif
   836   000998                     	if	0	;tblptru may be non-zero
   837   000998                     	endif
   838   000998                     	if	0	;tblptru may be non-zero
   839   000998                     	endif
   840   000998  0008               	tblrd		*
   841   00099A  50F5               	movf	tablat,w,c
   842   00099C  6E01               	movwf	fputc@c^0,c
   843   00099E  6A02               	clrf	(fputc@c+1)^0,c
   844   0009A0  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
   845   0009A4  EC91  F005         	call	_fputc	;wreg free
   846   0009A8  EFC1  F004         	goto	l1195
   847   0009AC                     l801:
   848   0009AC  0012               	return		;funcret
   849   0009AE                     __end_of_vfpfcnvrt:
   850                           	callstack 0
   851                           
   852 ;; *************** function _fputc *****************
   853 ;; Defined at:
   854 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  c               2    0[COMRAM] int 
   857 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
   858 ;;		 -> sprintf@f(12), 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;                  2    0[COMRAM] int 
   863 ;; Registers used:
   864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
   870 ;;      Params:         3       0       0       0       0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0       0       0       0       0
   872 ;;      Temps:          5       0       0       0       0       0       0       0       0
   873 ;;      Totals:         8       0       0       0       0       0       0       0       0
   874 ;;Total ram usage:        8 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; Hardware stack levels required when called: 1
   877 ;; This function calls:
   878 ;;		_putch
   879 ;; This function is called by:
   880 ;;		_vfpfcnvrt
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text4
   885   000B22                     __ptext4:
   886                           	callstack 0
   887   000B22                     _fputc:
   888                           	callstack 26
   889   000B22  5003               	movf	fputc@fp^0,w,c
   890   000B24  B4D8               	btfsc	status,2,c
   891   000B26  EF97  F005         	goto	u441
   892   000B2A  EF99  F005         	goto	u440
   893   000B2E                     u441:
   894   000B2E  EFA1  F005         	goto	l1141
   895   000B32                     u440:
   896   000B32  5003               	movf	fputc@fp^0,w,c
   897   000B34  A4D8               	btfss	status,2,c
   898   000B36  EF9F  F005         	goto	u451
   899   000B3A  EFA1  F005         	goto	u450
   900   000B3E                     u451:
   901   000B3E  EFA6  F005         	goto	l1143
   902   000B42                     u450:
   903   000B42                     l1141:
   904   000B42  5001               	movf	fputc@c^0,w,c
   905   000B44  ECBC  F006         	call	_putch
   906   000B48  EFE5  F005         	goto	l826
   907   000B4C                     l1143:
   908   000B4C  5003               	movf	fputc@fp^0,w,c
   909   000B4E  6ED9               	movwf	fsr2l,c
   910   000B50  6ADA               	clrf	fsr2h,c
   911   000B52  0E0A               	movlw	10
   912   000B54  26D9               	addwf	fsr2l,f,c
   913   000B56  50DE               	movf	postinc2,w,c
   914   000B58  10DE               	iorwf	postinc2,w,c
   915   000B5A  B4D8               	btfsc	status,2,c
   916   000B5C  EFB2  F005         	goto	u461
   917   000B60  EFB4  F005         	goto	u460
   918   000B64                     u461:
   919   000B64  EFCD  F005         	goto	l1147
   920   000B68                     u460:
   921   000B68  5003               	movf	fputc@fp^0,w,c
   922   000B6A  6ED9               	movwf	fsr2l,c
   923   000B6C  6ADA               	clrf	fsr2h,c
   924   000B6E  0E0A               	movlw	10
   925   000B70  26D9               	addwf	fsr2l,f,c
   926   000B72  5003               	movf	fputc@fp^0,w,c
   927   000B74  6EE1               	movwf	fsr1l,c
   928   000B76  6AE2               	clrf	fsr1h,c
   929   000B78  0E03               	movlw	3
   930   000B7A  26E1               	addwf	fsr1l,f,c
   931   000B7C  50DE               	movf	postinc2,w,c
   932   000B7E  5CE6               	subwf	postinc1,w,c
   933   000B80  50E6               	movf	postinc1,w,c
   934   000B82  0A80               	xorlw	128
   935   000B84  6E08               	movwf	(??_fputc+4)^0,c
   936   000B86  50DE               	movf	postinc2,w,c
   937   000B88  0A80               	xorlw	128
   938   000B8A  5808               	subwfb	(??_fputc+4)^0,w,c
   939   000B8C  B0D8               	btfsc	status,0,c
   940   000B8E  EFCB  F005         	goto	u471
   941   000B92  EFCD  F005         	goto	u470
   942   000B96                     u471:
   943   000B96  EFE5  F005         	goto	l826
   944   000B9A                     u470:
   945   000B9A                     l1147:
   946   000B9A  5003               	movf	fputc@fp^0,w,c
   947   000B9C  6ED9               	movwf	fsr2l,c
   948   000B9E  6ADA               	clrf	fsr2h,c
   949   000BA0  0E03               	movlw	3
   950   000BA2  26D9               	addwf	fsr2l,f,c
   951   000BA4  50DF               	movf	indf2,w,c
   952   000BA6  6E04               	movwf	??_fputc^0,c
   953   000BA8  5003               	movf	fputc@fp^0,w,c
   954   000BAA  6ED9               	movwf	fsr2l,c
   955   000BAC  6ADA               	clrf	fsr2h,c
   956   000BAE  50DF               	movf	indf2,w,c
   957   000BB0  2404               	addwf	??_fputc^0,w,c
   958   000BB2  6ED9               	movwf	fsr2l,c
   959   000BB4  6ADA               	clrf	fsr2h,c
   960   000BB6  C001  FFDF         	movff	fputc@c,indf2
   961   000BBA  5003               	movf	fputc@fp^0,w,c
   962   000BBC  6ED9               	movwf	fsr2l,c
   963   000BBE  6ADA               	clrf	fsr2h,c
   964   000BC0  0E03               	movlw	3
   965   000BC2  26D9               	addwf	fsr2l,f,c
   966   000BC4  2ADE               	incf	postinc2,f,c
   967   000BC6  0E00               	movlw	0
   968   000BC8  22DD               	addwfc	postdec2,f,c
   969   000BCA                     l826:
   970   000BCA  0012               	return		;funcret
   971   000BCC                     __end_of_fputc:
   972                           	callstack 0
   973                           
   974 ;; *************** function _putch *****************
   975 ;; Defined at:
   976 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  c               1    wreg     unsigned char 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  c               1    0[COMRAM] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
   990 ;;      Params:         0       0       0       0       0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0
   993 ;;      Totals:         0       0       0       0       0       0       0       0       0
   994 ;;Total ram usage:        0 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_fputc
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text5
  1004   000D78                     __ptext5:
  1005                           	callstack 0
  1006   000D78                     _putch:
  1007                           	callstack 26
  1008   000D78  0012               	return		;funcret
  1009   000D7A                     __end_of_putch:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function _abs *****************
  1013 ;; Defined at:
  1014 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  a               2    6[COMRAM] int 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  2    6[COMRAM] int 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  1028 ;;      Params:         2       0       0       0       0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1030 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1031 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1032 ;;Total ram usage:        4 bytes
  1033 ;; Hardware stack levels used: 1
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_vfpfcnvrt
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text6
  1042   000CD0                     __ptext6:
  1043                           	callstack 0
  1044   000CD0                     _abs:
  1045                           	callstack 27
  1046   000CD0  BE08               	btfsc	(abs@a+1)^0,7,c
  1047   000CD2  EF6D  F006         	goto	u481
  1048   000CD6  EF6F  F006         	goto	u480
  1049   000CDA                     u481:
  1050   000CDA  EF75  F006         	goto	l811
  1051   000CDE                     u480:
  1052   000CDE  C007  F007         	movff	abs@a,?_abs
  1053   000CE2  C008  F008         	movff	abs@a+1,?_abs+1
  1054   000CE6  EF81  F006         	goto	l814
  1055   000CEA                     l811:
  1056   000CEA  C007  F009         	movff	abs@a,??_abs
  1057   000CEE  C008  F00A         	movff	abs@a+1,??_abs+1
  1058   000CF2  1E09               	comf	??_abs^0,f,c
  1059   000CF4  1E0A               	comf	(??_abs+1)^0,f,c
  1060   000CF6  4A09               	infsnz	??_abs^0,f,c
  1061   000CF8  2A0A               	incf	(??_abs+1)^0,f,c
  1062   000CFA  C009  F007         	movff	??_abs,?_abs
  1063   000CFE  C00A  F008         	movff	??_abs+1,?_abs+1
  1064   000D02                     l814:
  1065   000D02  0012               	return		;funcret
  1066   000D04                     __end_of_abs:
  1067                           	callstack 0
  1068                           
  1069 ;; *************** function ___awmod *****************
  1070 ;; Defined at:
  1071 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  dividend        2    0[COMRAM] int 
  1074 ;;  divisor         2    2[COMRAM] int 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  sign            1    5[COMRAM] unsigned char 
  1077 ;;  counter         1    4[COMRAM] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  2    0[COMRAM] int 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  1087 ;;      Params:         4       0       0       0       0       0       0       0       0
  1088 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1090 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1091 ;;Total ram usage:        6 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_vfpfcnvrt
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text7
  1101   000A72                     __ptext7:
  1102                           	callstack 0
  1103   000A72                     ___awmod:
  1104                           	callstack 27
  1105   000A72  0E00               	movlw	0
  1106   000A74  6E06               	movwf	___awmod@sign^0,c
  1107   000A76  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1108   000A78  EF42  F005         	goto	u380
  1109   000A7C  EF40  F005         	goto	u381
  1110   000A80                     u381:
  1111   000A80  EF48  F005         	goto	l1109
  1112   000A84                     u380:
  1113   000A84  6C01               	negf	___awmod@dividend^0,c
  1114   000A86  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1115   000A88  B0D8               	btfsc	status,0,c
  1116   000A8A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1117   000A8C  0E01               	movlw	1
  1118   000A8E  6E06               	movwf	___awmod@sign^0,c
  1119   000A90                     l1109:
  1120   000A90  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1121   000A92  EF4F  F005         	goto	u390
  1122   000A96  EF4D  F005         	goto	u391
  1123   000A9A                     u391:
  1124   000A9A  EF53  F005         	goto	l1113
  1125   000A9E                     u390:
  1126   000A9E  6C03               	negf	___awmod@divisor^0,c
  1127   000AA0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1128   000AA2  B0D8               	btfsc	status,0,c
  1129   000AA4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1130   000AA6                     l1113:
  1131   000AA6  5003               	movf	___awmod@divisor^0,w,c
  1132   000AA8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1133   000AAA  B4D8               	btfsc	status,2,c
  1134   000AAC  EF5A  F005         	goto	u401
  1135   000AB0  EF5C  F005         	goto	u400
  1136   000AB4                     u401:
  1137   000AB4  EF80  F005         	goto	l1129
  1138   000AB8                     u400:
  1139   000AB8  0E01               	movlw	1
  1140   000ABA  6E05               	movwf	___awmod@counter^0,c
  1141   000ABC  EF64  F005         	goto	l1119
  1142   000AC0                     l1117:
  1143   000AC0  90D8               	bcf	status,0,c
  1144   000AC2  3603               	rlcf	___awmod@divisor^0,f,c
  1145   000AC4  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1146   000AC6  2A05               	incf	___awmod@counter^0,f,c
  1147   000AC8                     l1119:
  1148   000AC8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1149   000ACA  EF69  F005         	goto	u411
  1150   000ACE  EF6B  F005         	goto	u410
  1151   000AD2                     u411:
  1152   000AD2  EF60  F005         	goto	l1117
  1153   000AD6                     u410:
  1154   000AD6                     l1121:
  1155   000AD6  5003               	movf	___awmod@divisor^0,w,c
  1156   000AD8  5C01               	subwf	___awmod@dividend^0,w,c
  1157   000ADA  5004               	movf	(___awmod@divisor+1)^0,w,c
  1158   000ADC  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1159   000ADE  A0D8               	btfss	status,0,c
  1160   000AE0  EF74  F005         	goto	u421
  1161   000AE4  EF76  F005         	goto	u420
  1162   000AE8                     u421:
  1163   000AE8  EF7A  F005         	goto	l1125
  1164   000AEC                     u420:
  1165   000AEC  5003               	movf	___awmod@divisor^0,w,c
  1166   000AEE  5E01               	subwf	___awmod@dividend^0,f,c
  1167   000AF0  5004               	movf	(___awmod@divisor+1)^0,w,c
  1168   000AF2  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1169   000AF4                     l1125:
  1170   000AF4  90D8               	bcf	status,0,c
  1171   000AF6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1172   000AF8  3203               	rrcf	___awmod@divisor^0,f,c
  1173   000AFA  2E05               	decfsz	___awmod@counter^0,f,c
  1174   000AFC  EF6B  F005         	goto	l1121
  1175   000B00                     l1129:
  1176   000B00  5006               	movf	___awmod@sign^0,w,c
  1177   000B02  B4D8               	btfsc	status,2,c
  1178   000B04  EF86  F005         	goto	u431
  1179   000B08  EF88  F005         	goto	u430
  1180   000B0C                     u431:
  1181   000B0C  EF8C  F005         	goto	l1133
  1182   000B10                     u430:
  1183   000B10  6C01               	negf	___awmod@dividend^0,c
  1184   000B12  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1185   000B14  B0D8               	btfsc	status,0,c
  1186   000B16  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1187   000B18                     l1133:
  1188   000B18  C001  F001         	movff	___awmod@dividend,?___awmod
  1189   000B1C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1190   000B20  0012               	return		;funcret
  1191   000B22                     __end_of___awmod:
  1192                           	callstack 0
  1193                           
  1194 ;; *************** function ___awdiv *****************
  1195 ;; Defined at:
  1196 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  dividend        2    0[COMRAM] int 
  1199 ;;  divisor         2    2[COMRAM] int 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  quotient        2    6[COMRAM] int 
  1202 ;;  sign            1    5[COMRAM] unsigned char 
  1203 ;;  counter         1    4[COMRAM] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  2    0[COMRAM] int 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  1213 ;;      Params:         4       0       0       0       0       0       0       0       0
  1214 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1216 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1217 ;;Total ram usage:        8 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_vfpfcnvrt
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text8
  1227   0009AE                     __ptext8:
  1228                           	callstack 0
  1229   0009AE                     ___awdiv:
  1230                           	callstack 27
  1231   0009AE  0E00               	movlw	0
  1232   0009B0  6E06               	movwf	___awdiv@sign^0,c
  1233   0009B2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1234   0009B4  EFE0  F004         	goto	u320
  1235   0009B8  EFDE  F004         	goto	u321
  1236   0009BC                     u321:
  1237   0009BC  EFE6  F004         	goto	l1065
  1238   0009C0                     u320:
  1239   0009C0  6C03               	negf	___awdiv@divisor^0,c
  1240   0009C2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1241   0009C4  B0D8               	btfsc	status,0,c
  1242   0009C6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1243   0009C8  0E01               	movlw	1
  1244   0009CA  6E06               	movwf	___awdiv@sign^0,c
  1245   0009CC                     l1065:
  1246   0009CC  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1247   0009CE  EFED  F004         	goto	u330
  1248   0009D2  EFEB  F004         	goto	u331
  1249   0009D6                     u331:
  1250   0009D6  EFF3  F004         	goto	l1071
  1251   0009DA                     u330:
  1252   0009DA  6C01               	negf	___awdiv@dividend^0,c
  1253   0009DC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1254   0009DE  B0D8               	btfsc	status,0,c
  1255   0009E0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1256   0009E2  0E01               	movlw	1
  1257   0009E4  1A06               	xorwf	___awdiv@sign^0,f,c
  1258   0009E6                     l1071:
  1259   0009E6  0E00               	movlw	0
  1260   0009E8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1261   0009EA  0E00               	movlw	0
  1262   0009EC  6E07               	movwf	___awdiv@quotient^0,c
  1263   0009EE  5003               	movf	___awdiv@divisor^0,w,c
  1264   0009F0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1265   0009F2  B4D8               	btfsc	status,2,c
  1266   0009F4  EFFE  F004         	goto	u341
  1267   0009F8  EF00  F005         	goto	u340
  1268   0009FC                     u341:
  1269   0009FC  EF28  F005         	goto	l1093
  1270   000A00                     u340:
  1271   000A00  0E01               	movlw	1
  1272   000A02  6E05               	movwf	___awdiv@counter^0,c
  1273   000A04  EF08  F005         	goto	l1079
  1274   000A08                     l1077:
  1275   000A08  90D8               	bcf	status,0,c
  1276   000A0A  3603               	rlcf	___awdiv@divisor^0,f,c
  1277   000A0C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1278   000A0E  2A05               	incf	___awdiv@counter^0,f,c
  1279   000A10                     l1079:
  1280   000A10  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1281   000A12  EF0D  F005         	goto	u351
  1282   000A16  EF0F  F005         	goto	u350
  1283   000A1A                     u351:
  1284   000A1A  EF04  F005         	goto	l1077
  1285   000A1E                     u350:
  1286   000A1E                     l1081:
  1287   000A1E  90D8               	bcf	status,0,c
  1288   000A20  3607               	rlcf	___awdiv@quotient^0,f,c
  1289   000A22  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1290   000A24  5003               	movf	___awdiv@divisor^0,w,c
  1291   000A26  5C01               	subwf	___awdiv@dividend^0,w,c
  1292   000A28  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1293   000A2A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1294   000A2C  A0D8               	btfss	status,0,c
  1295   000A2E  EF1B  F005         	goto	u361
  1296   000A32  EF1D  F005         	goto	u360
  1297   000A36                     u361:
  1298   000A36  EF22  F005         	goto	l1089
  1299   000A3A                     u360:
  1300   000A3A  5003               	movf	___awdiv@divisor^0,w,c
  1301   000A3C  5E01               	subwf	___awdiv@dividend^0,f,c
  1302   000A3E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1303   000A40  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1304   000A42  8007               	bsf	___awdiv@quotient^0,0,c
  1305   000A44                     l1089:
  1306   000A44  90D8               	bcf	status,0,c
  1307   000A46  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1308   000A48  3203               	rrcf	___awdiv@divisor^0,f,c
  1309   000A4A  2E05               	decfsz	___awdiv@counter^0,f,c
  1310   000A4C  EF0F  F005         	goto	l1081
  1311   000A50                     l1093:
  1312   000A50  5006               	movf	___awdiv@sign^0,w,c
  1313   000A52  B4D8               	btfsc	status,2,c
  1314   000A54  EF2E  F005         	goto	u371
  1315   000A58  EF30  F005         	goto	u370
  1316   000A5C                     u371:
  1317   000A5C  EF34  F005         	goto	l1097
  1318   000A60                     u370:
  1319   000A60  6C07               	negf	___awdiv@quotient^0,c
  1320   000A62  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1321   000A64  B0D8               	btfsc	status,0,c
  1322   000A66  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1323   000A68                     l1097:
  1324   000A68  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1325   000A6C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1326   000A70  0012               	return		;funcret
  1327   000A72                     __end_of___awdiv:
  1328                           	callstack 0
  1329                           
  1330 ;; *************** function _USART_Transmit *****************
  1331 ;; Defined at:
  1332 ;;		line 76 in file "xd.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  str             1    0[COMRAM] PTR const unsigned char 
  1335 ;;		 -> datos(40), 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  1347 ;;      Params:         1       0       0       0       0       0       0       0       0
  1348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1350 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1351 ;;Total ram usage:        1 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text9
  1361   000C66                     __ptext9:
  1362                           	callstack 0
  1363   000C66                     _USART_Transmit:
  1364                           	callstack 30
  1365   000C66                     
  1366                           ;xd.c: 76: void USART_Transmit(const char* str);xd.c: 77: {;xd.c: 78:     while(*str)
  1367   000C66  EF42  F006         	goto	l1253
  1368   000C6A                     l75:
  1369   000C6A  A2AC               	btfss	172,1,c	;volatile
  1370   000C6C  EF3A  F006         	goto	u601
  1371   000C70  EF3C  F006         	goto	u600
  1372   000C74                     u601:
  1373   000C74  EF35  F006         	goto	l75
  1374   000C78                     u600:
  1375   000C78                     
  1376                           ;xd.c: 81:         TXREG = *str++;
  1377   000C78  5001               	movf	USART_Transmit@str^0,w,c
  1378   000C7A  6ED9               	movwf	fsr2l,c
  1379   000C7C  6ADA               	clrf	fsr2h,c
  1380   000C7E  50DF               	movf	indf2,w,c
  1381   000C80  6EAD               	movwf	173,c	;volatile
  1382   000C82  2A01               	incf	USART_Transmit@str^0,f,c
  1383   000C84                     l1253:
  1384                           
  1385                           ;xd.c: 78:     while(*str)
  1386   000C84  5001               	movf	USART_Transmit@str^0,w,c
  1387   000C86  6ED9               	movwf	fsr2l,c
  1388   000C88  6ADA               	clrf	fsr2h,c
  1389   000C8A  50DF               	movf	indf2,w,c
  1390   000C8C  A4D8               	btfss	status,2,c
  1391   000C8E  EF4B  F006         	goto	u611
  1392   000C92  EF4D  F006         	goto	u610
  1393   000C96                     u611:
  1394   000C96  EF35  F006         	goto	l75
  1395   000C9A                     u610:
  1396   000C9A  0012               	return		;funcret
  1397   000C9C                     __end_of_USART_Transmit:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _USART_Init *****************
  1401 ;; Defined at:
  1402 ;;		line 64 in file "xd.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text10
  1430   000D64                     __ptext10:
  1431                           	callstack 0
  1432   000D64                     _USART_Init:
  1433                           	callstack 30
  1434   000D64                     
  1435                           ;xd.c: 66:     RCSTAbits.SPEN = 1;
  1436   000D64  8EAB               	bsf	171,7,c	;volatile
  1437                           
  1438                           ;xd.c: 67:     TXSTAbits.TX9 = 0;
  1439   000D66  9CAC               	bcf	172,6,c	;volatile
  1440                           
  1441                           ;xd.c: 68:     TXSTAbits.TXEN = 1;
  1442   000D68  8AAC               	bsf	172,5,c	;volatile
  1443                           
  1444                           ;xd.c: 69:     TXSTAbits.SYNC = 0;
  1445   000D6A  98AC               	bcf	172,4,c	;volatile
  1446                           
  1447                           ;xd.c: 70:     RCSTAbits.RX9 = 0;
  1448   000D6C  9CAB               	bcf	171,6,c	;volatile
  1449                           
  1450                           ;xd.c: 71:     RCSTAbits.CREN = 1;
  1451   000D6E  88AB               	bsf	171,4,c	;volatile
  1452                           
  1453                           ;xd.c: 72:     TXSTAbits.BRGH = 1;
  1454   000D70  84AC               	bsf	172,2,c	;volatile
  1455   000D72                     
  1456                           ;xd.c: 73:     SPBRG = 25;
  1457   000D72  0E19               	movlw	25
  1458   000D74  6EAF               	movwf	175,c	;volatile
  1459   000D76  0012               	return		;funcret
  1460   000D78                     __end_of_USART_Init:
  1461                           	callstack 0
  1462                           
  1463 ;; *************** function _GPIO_Init *****************
  1464 ;; Defined at:
  1465 ;;		line 38 in file "xd.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  1479 ;;      Params:         0       0       0       0       0       0       0       0       0
  1480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1482 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1483 ;;Total ram usage:        0 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text11
  1493   000D4C                     __ptext11:
  1494                           	callstack 0
  1495   000D4C                     _GPIO_Init:
  1496                           	callstack 30
  1497   000D4C                     
  1498                           ;xd.c: 41:     TRISD = 0x00;
  1499   000D4C  0E00               	movlw	0
  1500   000D4E  6E95               	movwf	149,c	;volatile
  1501                           
  1502                           ;xd.c: 42:     ANSELD = 0x00;
  1503   000D50  0E00               	movlw	0
  1504   000D52  010F               	movlb	15	; () banked
  1505   000D54  6F5E               	movwf	94,b	;volatile
  1506   000D56                     
  1507                           ; BSR set to: 15
  1508                           ;xd.c: 45:     TRISA = 0xFF;
  1509   000D56  6892               	setf	146,c	;volatile
  1510   000D58                     
  1511                           ; BSR set to: 15
  1512                           ;xd.c: 46:     ANSELA = 0xFF;
  1513   000D58  695B               	setf	91,b	;volatile
  1514   000D5A                     
  1515                           ; BSR set to: 15
  1516                           ;xd.c: 49:     TRISCbits.RC6 = 0;
  1517   000D5A  9C94               	bcf	148,6,c	;volatile
  1518   000D5C                     
  1519                           ; BSR set to: 15
  1520                           ;xd.c: 50:     TRISCbits.RC7 = 1;
  1521   000D5C  8E94               	bsf	148,7,c	;volatile
  1522                           
  1523                           ;xd.c: 51:     ANSELC = 0x00;
  1524   000D5E  0E00               	movlw	0
  1525   000D60  6F5D               	movwf	93,b	;volatile
  1526   000D62                     
  1527                           ; BSR set to: 15
  1528   000D62  0012               	return		;funcret
  1529   000D64                     __end_of_GPIO_Init:
  1530                           	callstack 0
  1531                           
  1532 ;; *************** function _ADC_Init *****************
  1533 ;; Defined at:
  1534 ;;		line 54 in file "xd.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1551 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1552 ;;Total ram usage:        0 bytes
  1553 ;; Hardware stack levels used: 1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text12
  1562   000D2A                     __ptext12:
  1563                           	callstack 0
  1564   000D2A                     _ADC_Init:
  1565                           	callstack 30
  1566   000D2A                     
  1567                           ;xd.c: 56:     ADCON1bits.PVCFG = 0;
  1568   000D2A  0EF3               	movlw	-13
  1569   000D2C  16C1               	andwf	193,f,c	;volatile
  1570                           
  1571                           ;xd.c: 57:     ADCON2bits.ADCS = 0b101;
  1572   000D2E  50C0               	movf	192,w,c	;volatile
  1573   000D30  0BF8               	andlw	-8
  1574   000D32  0905               	iorlw	5
  1575   000D34  6EC0               	movwf	192,c	;volatile
  1576                           
  1577                           ;xd.c: 58:     ADCON0bits.CHS = 1;
  1578   000D36  50C2               	movf	194,w,c	;volatile
  1579   000D38  0B83               	andlw	-125
  1580   000D3A  0904               	iorlw	4
  1581   000D3C  6EC2               	movwf	194,c	;volatile
  1582   000D3E                     
  1583                           ;xd.c: 59:     ADCON2bits.ADFM = 1;
  1584   000D3E  8EC0               	bsf	192,7,c	;volatile
  1585                           
  1586                           ;xd.c: 60:     ADCON2bits.ACQT = 0b011;
  1587   000D40  50C0               	movf	192,w,c	;volatile
  1588   000D42  0BC7               	andlw	-57
  1589   000D44  0918               	iorlw	24
  1590   000D46  6EC0               	movwf	192,c	;volatile
  1591   000D48                     
  1592                           ;xd.c: 61:     ADCON0bits.ADON = 1;
  1593   000D48  80C2               	bsf	194,0,c	;volatile
  1594   000D4A  0012               	return		;funcret
  1595   000D4C                     __end_of_ADC_Init:
  1596                           	callstack 0
  1597                           
  1598                           	psect	rparam
  1599   000000                     
  1600                           	psect	config
  1601                           
  1602                           ;Config register CONFIG1L @ 0x300000
  1603                           ;	PLL Selection
  1604                           ;	PLLSEL = PLL4X, 4x clock multiplier
  1605                           ;	PLL Enable Configuration bit
  1606                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  1607                           ;	CPU System Clock Postscaler
  1608                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1609                           ;	Low Speed USB mode with 48 MHz system clock
  1610                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1611   300000                     	org	3145728
  1612   300000  00                 	db	0
  1613                           
  1614                           ;Config register CONFIG1H @ 0x300001
  1615                           ;	Oscillator Selection
  1616                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  1617                           ;	Primary Oscillator Shutdown
  1618                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  1619                           ;	Fail-Safe Clock Monitor
  1620                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1621                           ;	Internal/External Oscillator Switchover
  1622                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1623   300001                     	org	3145729
  1624   300001  09                 	db	9
  1625                           
  1626                           ;Config register CONFIG2L @ 0x300002
  1627                           ;	Power-up Timer Enable
  1628                           ;	nPWRTEN = ON, Power up timer enabled
  1629                           ;	Brown-out Reset Enable
  1630                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  1631                           ;	Brown-out Reset Voltage
  1632                           ;	BORV = 190, BOR set to 1.9V nominal
  1633                           ;	Low-Power Brown-out Reset
  1634                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1635   300002                     	org	3145730
  1636   300002  58                 	db	88
  1637                           
  1638                           ;Config register CONFIG2H @ 0x300003
  1639                           ;	Watchdog Timer Enable bits
  1640                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1641                           ;	Watchdog Timer Postscaler
  1642                           ;	WDTPS = 32768, 1:32768
  1643   300003                     	org	3145731
  1644   300003  3C                 	db	60
  1645                           
  1646                           ; Padding undefined space
  1647   300004                     	org	3145732
  1648   300004  FF                 	db	255
  1649                           
  1650                           ;Config register CONFIG3H @ 0x300005
  1651                           ;	CCP2 MUX bit
  1652                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1653                           ;	PORTB A/D Enable bit
  1654                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1655                           ;	Timer3 Clock Input MUX bit
  1656                           ;	T3CMX = RC0, T3CKI function is on RC0
  1657                           ;	SDO Output MUX bit
  1658                           ;	SDOMX = RB3, SDO function is on RB3
  1659                           ;	Master Clear Reset Pin Enable
  1660                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1661   300005                     	org	3145733
  1662   300005  D1                 	db	209
  1663                           
  1664                           ;Config register CONFIG4L @ 0x300006
  1665                           ;	Stack Full/Underflow Reset
  1666                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1667                           ;	Single-Supply ICSP Enable bit
  1668                           ;	LVP = OFF, Single-Supply ICSP disabled
  1669                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1670                           ;	ICPRT = OFF, ICPORT disabled
  1671                           ;	Extended Instruction Set Enable bit
  1672                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1673                           ;	Background Debugger Enable bit
  1674                           ;	DEBUG = 0x1, unprogrammed default
  1675   300006                     	org	3145734
  1676   300006  81                 	db	129
  1677                           
  1678                           ; Padding undefined space
  1679   300007                     	org	3145735
  1680   300007  FF                 	db	255
  1681                           
  1682                           ;Config register CONFIG5L @ 0x300008
  1683                           ;	Block 0 Code Protect
  1684                           ;	CP0 = OFF, Block 0 is not code-protected
  1685                           ;	Block 1 Code Protect
  1686                           ;	CP1 = OFF, Block 1 is not code-protected
  1687                           ;	Block 2 Code Protect
  1688                           ;	CP2 = OFF, Block 2 is not code-protected
  1689                           ;	Block 3 Code Protect
  1690                           ;	CP3 = OFF, Block 3 is not code-protected
  1691   300008                     	org	3145736
  1692   300008  0F                 	db	15
  1693                           
  1694                           ;Config register CONFIG5H @ 0x300009
  1695                           ;	Boot Block Code Protect
  1696                           ;	CPB = OFF, Boot block is not code-protected
  1697                           ;	Data EEPROM Code Protect
  1698                           ;	CPD = OFF, Data EEPROM is not code-protected
  1699   300009                     	org	3145737
  1700   300009  C0                 	db	192
  1701                           
  1702                           ;Config register CONFIG6L @ 0x30000A
  1703                           ;	Block 0 Write Protect
  1704                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1705                           ;	Block 1 Write Protect
  1706                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1707                           ;	Block 2 Write Protect
  1708                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1709                           ;	Block 3 Write Protect
  1710                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1711   30000A                     	org	3145738
  1712   30000A  0F                 	db	15
  1713                           
  1714                           ;Config register CONFIG6H @ 0x30000B
  1715                           ;	Configuration Registers Write Protect
  1716                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1717                           ;	Boot Block Write Protect
  1718                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1719                           ;	Data EEPROM Write Protect
  1720                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1721   30000B                     	org	3145739
  1722   30000B  E0                 	db	224
  1723                           
  1724                           ;Config register CONFIG7L @ 0x30000C
  1725                           ;	Block 0 Table Read Protect
  1726                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1727                           ;	Block 1 Table Read Protect
  1728                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1729                           ;	Block 2 Table Read Protect
  1730                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1731                           ;	Block 3 Table Read Protect
  1732                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1733   30000C                     	org	3145740
  1734   30000C  0F                 	db	15
  1735                           
  1736                           ;Config register CONFIG7H @ 0x30000D
  1737                           ;	Boot Block Table Read Protect
  1738                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1739   30000D                     	org	3145741
  1740   30000D  40                 	db	64
  1741                           tosu	equ	0xFFF
  1742                           tosh	equ	0xFFE
  1743                           tosl	equ	0xFFD
  1744                           stkptr	equ	0xFFC
  1745                           pclatu	equ	0xFFB
  1746                           pclath	equ	0xFFA
  1747                           pcl	equ	0xFF9
  1748                           tblptru	equ	0xFF8
  1749                           tblptrh	equ	0xFF7
  1750                           tblptrl	equ	0xFF6
  1751                           tablat	equ	0xFF5
  1752                           prodh	equ	0xFF4
  1753                           prodl	equ	0xFF3
  1754                           indf0	equ	0xFEF
  1755                           postinc0	equ	0xFEE
  1756                           postdec0	equ	0xFED
  1757                           preinc0	equ	0xFEC
  1758                           plusw0	equ	0xFEB
  1759                           fsr0h	equ	0xFEA
  1760                           fsr0l	equ	0xFE9
  1761                           wreg	equ	0xFE8
  1762                           indf1	equ	0xFE7
  1763                           postinc1	equ	0xFE6
  1764                           postdec1	equ	0xFE5
  1765                           preinc1	equ	0xFE4
  1766                           plusw1	equ	0xFE3
  1767                           fsr1h	equ	0xFE2
  1768                           fsr1l	equ	0xFE1
  1769                           bsr	equ	0xFE0
  1770                           indf2	equ	0xFDF
  1771                           postinc2	equ	0xFDE
  1772                           postdec2	equ	0xFDD
  1773                           preinc2	equ	0xFDC
  1774                           plusw2	equ	0xFDB
  1775                           fsr2h	equ	0xFDA
  1776                           fsr2l	equ	0xFD9
  1777                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      81
    BANK0           160      0      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK7           256      0       0
    BANK6           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S840$buffer	PTR unsigned char  size(2) Largest target is 0

    S840$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 40
		 -> datos(BANK0[40]), 

    USART_Transmit@str	PTR const unsigned char  size(1) Largest target is 40
		 -> datos(BANK0[40]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3408
                                             42 COMRAM     2     2      0
                           _ADC_Init
                          _GPIO_Init
                         _USART_Init
                     _USART_Transmit
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    3287
                                             25 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2936
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    2586
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_Transmit                                       1     0      1     121
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _GPIO_Init
   _USART_Init
   _USART_Transmit
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      14        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      12        0.0%
BANK5              100      0       0      13        0.0%
BITBANK4           100      0       0      16        0.0%
BANK4              100      0       0      11        0.0%
BITBANK3           100      0       0      15        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      28       5       25.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      51       1       85.3%
BITBIGSFRh          29      0       0      20        0.0%
BITBIGSFRlllh       24      0       0      26        0.0%
BITBIGSFRllhhl      15      0       0      23        0.0%
BITBIGSFRllhhhh     10      0       0      22        0.0%
BITBIGSFRllhll       E      0       0      25        0.0%
BITBIGSFRlh          E      0       0      21        0.0%
BITBIGSFRlllll       8      0       0      28        0.0%
BITBIGSFRllllh       1      0       0      27        0.0%
BITBIGSFRllhlh       1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      79      29        0.0%
DATA                 0      0      79       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 26 23:00:07 2024

                     l70 0D76                       l64 0D62                       l56 0BE2  
                     l58 0BF0                       l67 0D4A                       l75 0C6A  
                     l79 0C9A             ___awdiv@sign 0006                      l316 0A70  
                    l329 0B20                      l801 09AC                      l811 0CEA  
                    l814 0D02                      l807 0C64                      l826 0BCA  
                    l763 0CCE                      l837 0D78                      u320 09C0  
                    u400 0AB8                      u321 09BC                      u401 0AB4  
                    u330 09DA                      u410 0AD6                      u331 09D6  
                    u411 0AD2                      u340 0A00                      u420 0AEC  
                    u500 085E                      u341 09FC                      u421 0AE8  
                    u501 085A                      u350 0A1E                      u430 0B10  
                    u510 0876                      u351 0A1A                      u431 0B0C  
                    u511 0872                      u600 0C78                      u360 0A3A  
                    u440 0B32                      u520 08AC                      u601 0C74  
                    u361 0A36                      u441 0B2E                      u521 08A6  
                    u610 0C9A                      u370 0A60                      u450 0B42  
                    u530 08AE                      u611 0C96                      u371 0A5C  
                    u451 0B3E                      u380 0A84                      u460 0B68  
                    u540 090E                      u620 0BF0                      u381 0A80  
                    u461 0B64                      u541 090A                      u621 0BEC  
                    u390 0A9E                      u470 0B9A                      u550 091E  
                    u391 0A9A                      u471 0B96                      u551 091A  
                    u480 0CDE                      u560 092E                      u481 0CDA  
                    u561 092A                      u570 093E                      u490 0824  
                    u571 093A                      u491 0820                      u580 097E  
                    u581 097A                      u637 0C18                      u590 0C5C  
                    u591 0C58                      _abs 0CD0             ___awmod@sign 0006  
 __end_of_USART_Transmit 0C9C                      wreg 0FE8                     l1101 0A72  
                   l1111 0A9E                     l1103 0A76                     l1121 0AD6  
                   l1113 0AA6                     l1105 0A84                     l1131 0B10  
                   l1123 0AEC                     l1115 0AB8                     l1107 0A8C  
                   l1211 0C5C                     ?_abs 0007                     l1221 0D5A  
                   l1061 09C0                     l1133 0B18                     l1125 0AF4  
                   l1117 0AC0                     l1109 0A90                     l1141 0B42  
                   l1205 0C2C                     l1223 0D5C                     l1215 0D4C  
                   l1231 0D64                     l1071 09E6                     l1063 09C8  
                   l1127 0AFA                     l1119 0AC8                     l1151 0CD0  
                   l1143 0B4C                     l1207 0C34                     l1225 0D2A  
                   l1217 0D56                     l1233 0D72                     l1081 0A1E  
                   l1073 09EE                     l1065 09CC                     l1057 09AE  
                   l1129 0B00                     l1153 0CDE                     l1145 0B68  
                   l1137 0B22                     l1161 0838                     l1209 0C44  
                   l1241 0CB4                     l1227 0D3E                     l1219 0D58  
                   l1251 0C82                     l1091 0A4A                     l1083 0A24  
                   l1075 0A00                     l1067 09DA                     l1059 09B2  
                   l1147 0B9A                     l1139 0B32                     l1171 088E  
                   l1163 083C                     l1155 0806                     l1243 0CC4  
                   l1235 0C9C                     l1229 0D48                     l1253 0C84  
                   l1085 0A3A                     l1077 0A08                     l1093 0A50  
                   l1069 09E2                     l1181 090E                     l1173 0898  
                   l1165 0846                     l1157 0824                     l1237 0CA4  
                   l1261 0BDC                     l1247 0C66                     l1095 0A60  
                   l1087 0A42                     l1079 0A10                     l1191 096A  
                   l1183 091E                     l1175 08B0                     l1167 085E  
                   l1159 082C                     l1239 0CAC                     l1263 0BE0  
                   l1255 0BCC                     l1249 0C78                     l1097 0A68  
                   l1089 0A44                     l1185 092E                     l1193 096C  
                   l1177 08E0                     l1169 0876                     l1265 0BF4  
                   l1257 0BD4                     l1187 093E                     l1179 08FC  
                   l1195 0982                     l1267 0C06                     l1259 0BD8  
                   l1189 0950                     l1269 0C0E                     l1199 098E  
                   STR_1 0801                     abs@a 0007                     _dbuf 002D  
                   _main 0BCC                     _prec 004F                     fsr1h 0FE2  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9         __end_of_ADC_Init 0D4C                     start 0002  
           ___param_bank 0000                    ??_abs 0009                    ?_main 0001  
        __end_of___awdiv 0A72          __end_of___awmod 0B22          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _RCREG 0FAE             vfpfcnvrt@fmt 000C  
                  _SPBRG 0FAF                    _PORTD 0F83                    _TRISA 0F92  
                  _TRISD 0F95                    _TXREG 0FAD          ?_USART_Transmit 0001  
                  _datos 0060                    _flags 0051                    _fputc 0B22  
                  _width 004D                    _putch 0D78                    tablat 0FF5  
                  status 0FD8          __end_of_sprintf 0CD0              ?_USART_Init 0001  
        __initialization 0D04             __end_of_main 0C2C                   ??_main 002B  
          __activetblptr 0001        __end_of_GPIO_Init 0D64                   ?_fputc 0001  
                 _ADRESL 0FC3         ___awdiv@dividend 0001                   _ANSELA 0F5B  
                 ?_putch 0001                   _ANSELC 0F5D                   _ANSELD 0F5E  
                 _OSCCON 0FD3            vfpfcnvrt@done 000F             vfprintf@cfmt 0019  
              ??___awdiv 0005                ??___awmod 0005                   clear_0 0D0A  
                 clear_1 0D16         ___awdiv@quotient 0007          ___awmod@divisor 0003  
                 isa$std 0001          ___awmod@counter 0005                   fputc@c 0001  
              ?_ADC_Init 0001             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8                   putch@c 0001  
       __end_of_vfprintf 0C66                ??_sprintf 001E               __accesstop 0060  
__end_of__initialization 0D1C            ___rparam_used 0001           __pcstackCOMRAM 0001  
          __end_of_fputc 0BCC            __end_of_putch 0D7A               ??_ADC_Init 0001  
                ??_fputc 0004                  ??_putch 0001               __pbssBANK0 0060  
       ??_USART_Transmit 0002                  _OSCCON2 0FD2             ??_USART_Init 0001  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 09AE  
                ___awmod 0A72                ?_vfprintf 0016             __psmallconst 0800  
                __pcinit 0D04                  __ramtop 0800                  __ptext0 0BCC  
                __ptext1 0C9C                  __ptext2 0C2C                  __ptext3 0806  
                __ptext4 0B22                  __ptext5 0D78                  __ptext6 0CD0  
                __ptext7 0A72                  __ptext8 09AE                  __ptext9 0C66  
       ___awmod@dividend 0001       __end_of_USART_Init 0D78                  _sprintf 0C9C  
              _GPIO_Init 0D4C     end_of_initialization 0D1C                  fputc@fp 0003  
      __end_of_vfpfcnvrt 09AE                _RCSTAbits 0FAB                  postdec2 0FDD  
                postinc0 0FEE                  postinc1 0FE6                  postinc2 0FDE  
       vfpfcnvrt@convarg 0011               ??_vfprintf 0019                _TRISCbits 0F94  
             ?_GPIO_Init 0001                _TXSTAbits 0FAC              vfpfcnvrt@ap 000D  
            vfpfcnvrt@cp 0010              vfpfcnvrt@fp 000B      start_initialization 0D04  
            __end_of_abs 0D04              vfprintf@fmt 0017              __pbssCOMRAM 002D  
            ??_GPIO_Init 0001                 ?___awdiv 0001                 ?___awmod 0001  
            __smallconst 0800                 _ADC_Init 0D2A                 ?_sprintf 001A  
              _vfpfcnvrt 0806               _ADCON0bits 0FC2               _ADCON1bits 0FC1  
             _ADCON2bits 0FC0               vfpfcnvrt@c 0015                 __Hrparam 0000  
             vfprintf@ap 0018                 __Lrparam 0000               vfprintf@fp 0016  
           __Lsmallconst 0800               ?_vfpfcnvrt 000B               sprintf@fmt 001B  
               __ptext10 0D64                 __ptext11 0D4C                 __ptext12 0D2A  
      USART_Transmit@str 0001                 isa$xinst 0000                 _vfprintf 0C2C  
              sprintf@ap 001E              ??_vfpfcnvrt 000E                 sprintf@f 001F  
               sprintf@s 001A           _USART_Transmit 0C66               _USART_Init 0D64  
