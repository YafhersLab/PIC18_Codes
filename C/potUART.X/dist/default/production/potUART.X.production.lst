

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 26 23:10:39 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 21/07/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F45K50 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     _RCREG	set	4014
    62   000000                     _TXREG	set	4013
    63   000000                     _SPBRG	set	4015
    64   000000                     _TXSTAbits	set	4012
    65   000000                     _ANSELA	set	3931
    66   000000                     _ANSELD	set	3934
    67   000000                     _PORTD	set	3971
    68   000000                     _ADCON0bits	set	4034
    69   000000                     _OSCCON2	set	4050
    70   000000                     _OSCCON	set	4051
    71   000000                     _ADRESL	set	4035
    72   000000                     _TRISA	set	3986
    73   000000                     _TRISD	set	3989
    74   000000                     _RCSTAbits	set	4011
    75   000000                     _ADCON2bits	set	4032
    76   000000                     _ADCON1bits	set	4033
    77   000000                     _TRISCbits	set	3988
    78   000000                     _ANSELC	set	3933
    79                           
    80                           	psect	smallconst
    81   000800                     __psmallconst:
    82                           	callstack 0
    83   000800  00                 	db	0
    84   000801                     STR_1:
    85   000801  25                 	db	37
    86   000802  64                 	db	100	;'d'
    87   000803  0A                 	db	10
    88   000804  00                 	db	0
    89   000805  00                 	db	0	; dummy byte at the end
    90   000000                     
    91                           ; #config settings
    92                           
    93                           	psect	cinit
    94   000D04                     __pcinit:
    95                           	callstack 0
    96   000D04                     start_initialization:
    97                           	callstack 0
    98   000D04                     __initialization:
    99                           	callstack 0
   100                           
   101                           ; Clear objects allocated to BANK0 (40 bytes)
   102   000D04  EE00  F060         	lfsr	0,__pbssBANK0
   103   000D08  0E28               	movlw	40
   104   000D0A                     clear_0:
   105   000D0A  6AEE               	clrf	postinc0,c
   106   000D0C  06E8               	decf	wreg,f,c
   107   000D0E  E1FD               	bnz	clear_0
   108                           
   109                           ; Clear objects allocated to COMRAM (37 bytes)
   110   000D10  EE00  F02D         	lfsr	0,__pbssCOMRAM
   111   000D14  0E25               	movlw	37
   112   000D16                     clear_1:
   113   000D16  6AEE               	clrf	postinc0,c
   114   000D18  06E8               	decf	wreg,f,c
   115   000D1A  E1FD               	bnz	clear_1
   116   000D1C                     end_of_initialization:
   117                           	callstack 0
   118   000D1C                     __end_of__initialization:
   119                           	callstack 0
   120   000D1C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   121   000D1E  6EF8               	movwf	tblptru,c
   122   000D20  0E08               	movlw	high __Lsmallconst
   123   000D22  6EF7               	movwf	tblptrh,c
   124   000D24  0100               	movlb	0
   125   000D26  EFE6  F005         	goto	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMRAM
   128   00002D                     __pbssCOMRAM:
   129                           	callstack 0
   130   00002D                     _dbuf:
   131                           	callstack 0
   132   00002D                     	ds	32
   133   00004D                     _width:
   134                           	callstack 0
   135   00004D                     	ds	2
   136   00004F                     _prec:
   137                           	callstack 0
   138   00004F                     	ds	2
   139   000051                     _flags:
   140                           	callstack 0
   141   000051                     	ds	1
   142                           
   143                           	psect	bssBANK0
   144   000060                     __pbssBANK0:
   145                           	callstack 0
   146   000060                     _datos:
   147                           	callstack 0
   148   000060                     	ds	40
   149                           
   150                           	psect	cstackCOMRAM
   151   000001                     __pcstackCOMRAM:
   152                           	callstack 0
   153   000001                     ?___awdiv:
   154                           	callstack 0
   155   000001                     ?___awmod:
   156                           	callstack 0
   157   000001                     USART_Transmit@str:
   158                           	callstack 0
   159   000001                     ___awdiv@dividend:
   160                           	callstack 0
   161   000001                     ___awmod@dividend:
   162                           	callstack 0
   163   000001                     fputc@c:
   164                           	callstack 0
   165                           
   166                           ; 2 bytes @ 0x0
   167   000001                     	ds	1
   168   000002                     
   169                           ; 1 bytes @ 0x1
   170   000002                     	ds	1
   171   000003                     fputc@fp:
   172                           	callstack 0
   173   000003                     ___awdiv@divisor:
   174                           	callstack 0
   175   000003                     ___awmod@divisor:
   176                           	callstack 0
   177                           
   178                           ; 2 bytes @ 0x2
   179   000003                     	ds	1
   180   000004                     ??_fputc:
   181                           
   182                           ; 1 bytes @ 0x3
   183   000004                     	ds	1
   184   000005                     ___awdiv@counter:
   185                           	callstack 0
   186   000005                     ___awmod@counter:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x4
   190   000005                     	ds	1
   191   000006                     ___awdiv@sign:
   192                           	callstack 0
   193   000006                     ___awmod@sign:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x5
   197   000006                     	ds	1
   198   000007                     ?_abs:
   199                           	callstack 0
   200   000007                     ___awdiv@quotient:
   201                           	callstack 0
   202   000007                     abs@a:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x6
   206   000007                     	ds	2
   207   000009                     ??_abs:
   208                           
   209                           ; 1 bytes @ 0x8
   210   000009                     	ds	2
   211   00000B                     vfpfcnvrt@fp:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0xA
   215   00000B                     	ds	1
   216   00000C                     vfpfcnvrt@fmt:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0xB
   220   00000C                     	ds	1
   221   00000D                     vfpfcnvrt@ap:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0xC
   225   00000D                     	ds	1
   226   00000E                     ??_vfpfcnvrt:
   227                           
   228                           ; 1 bytes @ 0xD
   229   00000E                     	ds	1
   230   00000F                     vfpfcnvrt@done:
   231                           	callstack 0
   232                           
   233                           ; 1 bytes @ 0xE
   234   00000F                     	ds	1
   235   000010                     vfpfcnvrt@cp:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0xF
   239   000010                     	ds	1
   240   000011                     vfpfcnvrt@convarg:
   241                           	callstack 0
   242                           
   243                           ; 4 bytes @ 0x10
   244   000011                     	ds	4
   245   000015                     vfpfcnvrt@c:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x14
   249   000015                     	ds	1
   250   000016                     ?_vfprintf:
   251                           	callstack 0
   252   000016                     vfprintf@fp:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x15
   256   000016                     	ds	1
   257   000017                     vfprintf@fmt:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x16
   261   000017                     	ds	1
   262   000018                     vfprintf@ap:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x17
   266   000018                     	ds	1
   267   000019                     vfprintf@cfmt:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x18
   271   000019                     	ds	1
   272   00001A                     ?_sprintf:
   273                           	callstack 0
   274   00001A                     sprintf@s:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x19
   278   00001A                     	ds	1
   279   00001B                     sprintf@fmt:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x1A
   283   00001B                     	ds	3
   284   00001E                     sprintf@ap:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x1D
   288   00001E                     	ds	1
   289   00001F                     sprintf@f:
   290                           	callstack 0
   291                           
   292                           ; 12 bytes @ 0x1E
   293   00001F                     	ds	12
   294   00002B                     ??_main:
   295                           
   296                           ; 1 bytes @ 0x2A
   297   00002B                     	ds	2
   298                           
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   301 ;;
   302 ;; *************** function _main *****************
   303 ;; Defined at:
   304 ;;		line 15 in file "xd.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   318 ;;      Params:         0       0       0       0       0       0       0       0       0
   319 ;;      Locals:         0       0       0       0       0       0       0       0       0
   320 ;;      Temps:          2       0       0       0       0       0       0       0       0
   321 ;;      Totals:         2       0       0       0       0       0       0       0       0
   322 ;;Total ram usage:        2 bytes
   323 ;; Hardware stack levels required when called: 5
   324 ;; This function calls:
   325 ;;		_ADC_Init
   326 ;;		_GPIO_Init
   327 ;;		_USART_Init
   328 ;;		_USART_Transmit
   329 ;;		_sprintf
   330 ;; This function is called by:
   331 ;;		Startup code after reset
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           	psect	text0
   336   000BCC                     __ptext0:
   337                           	callstack 0
   338   000BCC                     _main:
   339                           	callstack 26
   340   000BCC                     
   341                           ;xd.c: 18:     OSCCON = 0x52;
   342   000BCC  0E52               	movlw	82
   343   000BCE  6ED3               	movwf	211,c	;volatile
   344                           
   345                           ;xd.c: 19:     OSCCON2 = 0;
   346   000BD0  0E00               	movlw	0
   347   000BD2  6ED2               	movwf	210,c	;volatile
   348   000BD4                     
   349                           ;xd.c: 22:     GPIO_Init();
   350   000BD4  ECA6  F006         	call	_GPIO_Init	;wreg free
   351   000BD8                     
   352                           ;xd.c: 23:     ADC_Init();
   353   000BD8  EC95  F006         	call	_ADC_Init	;wreg free
   354   000BDC                     
   355                           ;xd.c: 24:     USART_Init();
   356   000BDC  ECB2  F006         	call	_USART_Init	;wreg free
   357   000BE0                     l1263:
   358                           
   359                           ;xd.c: 27:     {;xd.c: 28:         ADCON0bits.GODONE = 1;
   360   000BE0  82C2               	bsf	194,1,c	;volatile
   361   000BE2                     l56:
   362   000BE2  B2C2               	btfsc	194,1,c	;volatile
   363   000BE4  EFF6  F005         	goto	u621
   364   000BE8  EFF8  F005         	goto	u620
   365   000BEC                     u621:
   366   000BEC  EFF1  F005         	goto	l56
   367   000BF0                     u620:
   368   000BF0                     
   369                           ;xd.c: 30:         PORTD = ADRESL;
   370   000BF0  CFC3 FF83          	movff	4035,3971	;volatile
   371   000BF4                     
   372                           ;xd.c: 31:         sprintf(datos,"%d\n",ADRESL);
   373   000BF4  0E60               	movlw	low _datos
   374   000BF6  6E1A               	movwf	sprintf@s^0,c
   375   000BF8  0E01               	movlw	low STR_1
   376   000BFA  6E1B               	movwf	sprintf@fmt^0,c
   377   000BFC  CFC3 F01C          	movff	4035,?_sprintf+2	;volatile
   378   000C00  6A1D               	clrf	(?_sprintf+3)^0,c
   379   000C02  EC4E  F006         	call	_sprintf	;wreg free
   380   000C06                     
   381                           ;xd.c: 32:         USART_Transmit(datos);
   382   000C06  0E60               	movlw	low _datos
   383   000C08  6E01               	movwf	USART_Transmit@str^0,c
   384   000C0A  EC33  F006         	call	_USART_Transmit	;wreg free
   385   000C0E                     
   386                           ;xd.c: 33:         _delay((unsigned long)((1000)*(4000000L/4000.0)));
   387   000C0E  0E06               	movlw	6
   388   000C10  6E2C               	movwf	(??_main+1)^0,c
   389   000C12  0E13               	movlw	19
   390   000C14  6E2B               	movwf	??_main^0,c
   391   000C16  0EAE               	movlw	174
   392   000C18                     u637:
   393   000C18  2EE8               	decfsz	wreg,f,c
   394   000C1A  D7FE               	bra	u637
   395   000C1C  2E2B               	decfsz	??_main^0,f,c
   396   000C1E  D7FC               	bra	u637
   397   000C20  2E2C               	decfsz	(??_main+1)^0,f,c
   398   000C22  D7FA               	bra	u637
   399   000C24  EFF0  F005         	goto	l1263
   400   000C28  EF00  F000         	goto	start
   401   000C2C                     __end_of_main:
   402                           	callstack 0
   403                           
   404 ;; *************** function _sprintf *****************
   405 ;; Defined at:
   406 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;  s               1   25[COMRAM] PTR unsigned char 
   409 ;;		 -> datos(40), 
   410 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
   411 ;;		 -> STR_1(4), 
   412 ;; Auto vars:     Size  Location     Type
   413 ;;  f              12   30[COMRAM] struct _IO_FILE
   414 ;;  ret             2    0        int 
   415 ;;  ap              1   29[COMRAM] PTR void [1]
   416 ;;		 -> ?_sprintf(2), 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  2   25[COMRAM] int 
   419 ;; Registers used:
   420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   426 ;;      Params:         4       0       0       0       0       0       0       0       0
   427 ;;      Locals:        13       0       0       0       0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0       0       0       0       0
   429 ;;      Totals:        17       0       0       0       0       0       0       0       0
   430 ;;Total ram usage:       17 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; Hardware stack levels required when called: 4
   433 ;; This function calls:
   434 ;;		_vfprintf
   435 ;; This function is called by:
   436 ;;		_main
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text1
   441   000C9C                     __ptext1:
   442                           	callstack 0
   443   000C9C                     _sprintf:
   444                           	callstack 26
   445   000C9C  0E1C               	movlw	low (?_sprintf+2)
   446   000C9E  6E1E               	movwf	sprintf@ap^0,c
   447   000CA0  C01A  F01F         	movff	sprintf@s,sprintf@f
   448   000CA4  0E00               	movlw	0
   449   000CA6  6E23               	movwf	(sprintf@f+4)^0,c
   450   000CA8  0E00               	movlw	0
   451   000CAA  6E22               	movwf	(sprintf@f+3)^0,c
   452   000CAC  0E00               	movlw	0
   453   000CAE  6E2A               	movwf	(sprintf@f+11)^0,c
   454   000CB0  0E00               	movlw	0
   455   000CB2  6E29               	movwf	(sprintf@f+10)^0,c
   456   000CB4  0E1F               	movlw	low sprintf@f
   457   000CB6  6E16               	movwf	vfprintf@fp^0,c
   458   000CB8  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
   459   000CBC  0E1E               	movlw	low sprintf@ap
   460   000CBE  6E18               	movwf	vfprintf@ap^0,c
   461   000CC0  EC16  F006         	call	_vfprintf	;wreg free
   462   000CC4  501A               	movf	sprintf@s^0,w,c
   463   000CC6  2422               	addwf	(sprintf@f+3)^0,w,c
   464   000CC8  6ED9               	movwf	fsr2l,c
   465   000CCA  6ADA               	clrf	fsr2h,c
   466   000CCC  6ADF               	clrf	indf2,c
   467   000CCE  0012               	return		;funcret
   468   000CD0                     __end_of_sprintf:
   469                           	callstack 0
   470                           
   471 ;; *************** function _vfprintf *****************
   472 ;; Defined at:
   473 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
   476 ;;		 -> sprintf@f(12), 
   477 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
   478 ;;		 -> STR_1(4), 
   479 ;;  ap              1   23[COMRAM] PTR PTR void 
   480 ;;		 -> sprintf@ap(1), 
   481 ;; Auto vars:     Size  Location     Type
   482 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
   483 ;;		 -> STR_1(4), 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  2   21[COMRAM] int 
   486 ;; Registers used:
   487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   493 ;;      Params:         3       0       0       0       0       0       0       0       0
   494 ;;      Locals:         1       0       0       0       0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0
   496 ;;      Totals:         4       0       0       0       0       0       0       0       0
   497 ;;Total ram usage:        4 bytes
   498 ;; Hardware stack levels used: 1
   499 ;; Hardware stack levels required when called: 3
   500 ;; This function calls:
   501 ;;		_vfpfcnvrt
   502 ;; This function is called by:
   503 ;;		_sprintf
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text2
   508   000C2C                     __ptext2:
   509                           	callstack 0
   510   000C2C                     _vfprintf:
   511                           	callstack 26
   512   000C2C                     
   513                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   514   000C2C  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
   515                           
   516                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   517   000C30  EF22  F006         	goto	l1209
   518   000C34                     l1207:
   519                           
   520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   521   000C34  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
   522   000C38  0E19               	movlw	low vfprintf@cfmt
   523   000C3A  6E0C               	movwf	vfpfcnvrt@fmt^0,c
   524   000C3C  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
   525   000C40  EC03  F004         	call	_vfpfcnvrt	;wreg free
   526   000C44                     l1209:
   527                           
   528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   529   000C44  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
   530   000C48                     	if	0	;There is only one active tblptr byte
   531   000C48                     	endif
   532   000C48                     	if	0	;tblptru may be non-zero
   533   000C48                     	endif
   534   000C48                     	if	0	;tblptru may be non-zero
   535   000C48                     	endif
   536   000C48  0008               	tblrd		*
   537   000C4A  50F5               	movf	tablat,w,c
   538   000C4C  0900               	iorlw	0
   539   000C4E  A4D8               	btfss	status,2,c
   540   000C50  EF2C  F006         	goto	u591
   541   000C54  EF2E  F006         	goto	u590
   542   000C58                     u591:
   543   000C58  EF1A  F006         	goto	l1207
   544   000C5C                     u590:
   545   000C5C                     
   546                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   547   000C5C  0E00               	movlw	0
   548   000C5E  6E17               	movwf	(?_vfprintf+1)^0,c
   549   000C60  0E00               	movlw	0
   550   000C62  6E16               	movwf	?_vfprintf^0,c
   551   000C64  0012               	return		;funcret
   552   000C66                     __end_of_vfprintf:
   553                           	callstack 0
   554                           
   555 ;; *************** function _vfpfcnvrt *****************
   556 ;; Defined at:
   557 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
   560 ;;		 -> sprintf@f(12), 
   561 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
   562 ;;		 -> vfprintf@cfmt(1), 
   563 ;;  ap              1   12[COMRAM] PTR PTR void 
   564 ;;		 -> sprintf@ap(1), 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  convarg         4   16[COMRAM] struct .
   567 ;;  c               1   20[COMRAM] unsigned char 
   568 ;;  cp              1   15[COMRAM] PTR unsigned char 
   569 ;;		 -> STR_1(4), 
   570 ;;  done            1   14[COMRAM] _Bool 
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   580 ;;      Params:         3       0       0       0       0       0       0       0       0
   581 ;;      Locals:         7       0       0       0       0       0       0       0       0
   582 ;;      Temps:          1       0       0       0       0       0       0       0       0
   583 ;;      Totals:        11       0       0       0       0       0       0       0       0
   584 ;;Total ram usage:       11 bytes
   585 ;; Hardware stack levels used: 1
   586 ;; Hardware stack levels required when called: 2
   587 ;; This function calls:
   588 ;;		___awdiv
   589 ;;		___awmod
   590 ;;		_abs
   591 ;;		_fputc
   592 ;; This function is called by:
   593 ;;		_vfprintf
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text3
   598   000806                     __ptext3:
   599                           	callstack 0
   600   000806                     _vfpfcnvrt:
   601                           	callstack 26
   602   000806                     
   603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   604   000806  500C               	movf	vfpfcnvrt@fmt^0,w,c
   605   000808  6ED9               	movwf	fsr2l,c
   606   00080A  6ADA               	clrf	fsr2h,c
   607   00080C  CFDF FFF6          	movff	indf2,tblptrl
   608   000810                     	if	0	;There is only one active tblptr byte
   609   000810                     	endif
   610   000810                     	if	0	;tblptru may be non-zero
   611   000810                     	endif
   612   000810                     	if	0	;tblptru may be non-zero
   613   000810                     	endif
   614   000810  0008               	tblrd		*
   615   000812  50F5               	movf	tablat,w,c
   616   000814  0A25               	xorlw	37
   617   000816  A4D8               	btfss	status,2,c
   618   000818  EF10  F004         	goto	u491
   619   00081C  EF12  F004         	goto	u490
   620   000820                     u491:
   621   000820  EFC7  F004         	goto	l1199
   622   000824                     u490:
   623   000824                     
   624                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   625   000824  500C               	movf	vfpfcnvrt@fmt^0,w,c
   626   000826  6ED9               	movwf	fsr2l,c
   627   000828  6ADA               	clrf	fsr2h,c
   628   00082A  2ADF               	incf	indf2,f,c
   629   00082C                     
   630                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   631   00082C  0E00               	movlw	0
   632   00082E  6E4E               	movwf	(_width+1)^0,c
   633   000830  0E00               	movlw	0
   634   000832  6E4D               	movwf	_width^0,c
   635   000834  C04D  F051         	movff	_width,_flags
   636   000838                     
   637                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   638   000838  684F               	setf	_prec^0,c
   639   00083A  6850               	setf	(_prec+1)^0,c
   640   00083C                     
   641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   642   00083C  500C               	movf	vfpfcnvrt@fmt^0,w,c
   643   00083E  6ED9               	movwf	fsr2l,c
   644   000840  6ADA               	clrf	fsr2h,c
   645   000842  50DF               	movf	indf2,w,c
   646   000844  6E10               	movwf	vfpfcnvrt@cp^0,c
   647   000846                     
   648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   649   000846  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   650   00084A                     	if	0	;There is only one active tblptr byte
   651   00084A                     	endif
   652   00084A                     	if	0	;tblptru may be non-zero
   653   00084A                     	endif
   654   00084A                     	if	0	;tblptru may be non-zero
   655   00084A                     	endif
   656   00084A  0008               	tblrd		*
   657   00084C  50F5               	movf	tablat,w,c
   658   00084E  0A64               	xorlw	100
   659   000850  B4D8               	btfsc	status,2,c
   660   000852  EF2D  F004         	goto	u501
   661   000856  EF2F  F004         	goto	u500
   662   00085A                     u501:
   663   00085A  EF3B  F004         	goto	l1169
   664   00085E                     u500:
   665   00085E  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   666   000862                     	if	0	;There is only one active tblptr byte
   667   000862                     	endif
   668   000862                     	if	0	;tblptru may be non-zero
   669   000862                     	endif
   670   000862                     	if	0	;tblptru may be non-zero
   671   000862                     	endif
   672   000862  0008               	tblrd		*
   673   000864  50F5               	movf	tablat,w,c
   674   000866  0A69               	xorlw	105
   675   000868  A4D8               	btfss	status,2,c
   676   00086A  EF39  F004         	goto	u511
   677   00086E  EF3B  F004         	goto	u510
   678   000872                     u511:
   679   000872  EFC1  F004         	goto	l1195
   680   000876                     u510:
   681   000876                     l1169:
   682                           
   683                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
   684   000876  500D               	movf	vfpfcnvrt@ap^0,w,c
   685   000878  6ED9               	movwf	fsr2l,c
   686   00087A  6ADA               	clrf	fsr2h,c
   687   00087C  0E02               	movlw	2
   688   00087E  26DF               	addwf	indf2,f,c
   689   000880  5CDF               	subwf	indf2,w,c
   690   000882  6ED9               	movwf	fsr2l,c
   691   000884  6ADA               	clrf	fsr2h,c
   692   000886  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
   693   00088A  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
   694   00088E                     
   695                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
   696   00088E  500C               	movf	vfpfcnvrt@fmt^0,w,c
   697   000890  6ED9               	movwf	fsr2l,c
   698   000892  6ADA               	clrf	fsr2h,c
   699   000894  2810               	incf	vfpfcnvrt@cp^0,w,c
   700   000896  6EDF               	movwf	indf2,c
   701   000898                     
   702                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
   703   000898  0E20               	movlw	32
   704   00089A  6E15               	movwf	vfpfcnvrt@c^0,c
   705                           
   706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
   707   00089C  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
   708   00089E  EF53  F004         	goto	u521
   709   0008A2  EF56  F004         	goto	u520
   710   0008A6                     u521:
   711   0008A6  0E01               	movlw	1
   712   0008A8  EF57  F004         	goto	u530
   713   0008AC                     u520:
   714   0008AC  0E00               	movlw	0
   715   0008AE                     u530:
   716   0008AE  6E0F               	movwf	vfpfcnvrt@done^0,c
   717   0008B0                     l1175:
   718                           
   719                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
   720   0008B0  0615               	decf	vfpfcnvrt@c^0,f,c
   721   0008B2  5015               	movf	vfpfcnvrt@c^0,w,c
   722   0008B4  0F2D               	addlw	low _dbuf
   723   0008B6  6ED9               	movwf	fsr2l,c
   724   0008B8  6ADA               	clrf	fsr2h,c
   725   0008BA  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
   726   0008BE  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
   727   0008C2  0E00               	movlw	0
   728   0008C4  6E04               	movwf	(___awmod@divisor+1)^0,c
   729   0008C6  0E0A               	movlw	10
   730   0008C8  6E03               	movwf	___awmod@divisor^0,c
   731   0008CA  EC39  F005         	call	___awmod	;wreg free
   732   0008CE  C001  F007         	movff	?___awmod,abs@a
   733   0008D2  C002  F008         	movff	?___awmod+1,abs@a+1
   734   0008D6  EC68  F006         	call	_abs	;wreg free
   735   0008DA  5007               	movf	?_abs^0,w,c
   736   0008DC  0F30               	addlw	48
   737   0008DE  6EDF               	movwf	indf2,c
   738   0008E0                     
   739                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
   740   0008E0  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
   741   0008E4  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
   742   0008E8  0E00               	movlw	0
   743   0008EA  6E04               	movwf	(___awdiv@divisor+1)^0,c
   744   0008EC  0E0A               	movlw	10
   745   0008EE  6E03               	movwf	___awdiv@divisor^0,c
   746   0008F0  ECD7  F004         	call	___awdiv	;wreg free
   747   0008F4  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
   748   0008F8  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
   749   0008FC                     
   750                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
   751   0008FC  5011               	movf	vfpfcnvrt@convarg^0,w,c
   752   0008FE  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
   753   000900  B4D8               	btfsc	status,2,c
   754   000902  EF85  F004         	goto	u541
   755   000906  EF87  F004         	goto	u540
   756   00090A                     u541:
   757   00090A  EF8F  F004         	goto	l1183
   758   00090E                     u540:
   759   00090E  5015               	movf	vfpfcnvrt@c^0,w,c
   760   000910  A4D8               	btfss	status,2,c
   761   000912  EF8D  F004         	goto	u551
   762   000916  EF8F  F004         	goto	u550
   763   00091A                     u551:
   764   00091A  EF58  F004         	goto	l1175
   765   00091E                     u550:
   766   00091E                     l1183:
   767                           
   768                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
   769   00091E  5015               	movf	vfpfcnvrt@c^0,w,c
   770   000920  B4D8               	btfsc	status,2,c
   771   000922  EF95  F004         	goto	u561
   772   000926  EF97  F004         	goto	u560
   773   00092A                     u561:
   774   00092A  EFB6  F004         	goto	l1193
   775   00092E                     u560:
   776   00092E  500F               	movf	vfpfcnvrt@done^0,w,c
   777   000930  B4D8               	btfsc	status,2,c
   778   000932  EF9D  F004         	goto	u571
   779   000936  EF9F  F004         	goto	u570
   780   00093A                     u571:
   781   00093A  EFB6  F004         	goto	l1193
   782   00093E                     u570:
   783   00093E                     
   784                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
   785   00093E  0615               	decf	vfpfcnvrt@c^0,f,c
   786   000940  5015               	movf	vfpfcnvrt@c^0,w,c
   787   000942  0F2D               	addlw	low _dbuf
   788   000944  6ED9               	movwf	fsr2l,c
   789   000946  6ADA               	clrf	fsr2h,c
   790   000948  0E2D               	movlw	45
   791   00094A  6EDF               	movwf	indf2,c
   792   00094C  EFB6  F004         	goto	l1193
   793   000950                     l1189:
   794                           
   795                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
   796   000950  5015               	movf	vfpfcnvrt@c^0,w,c
   797   000952  0F2D               	addlw	low _dbuf
   798   000954  6ED9               	movwf	fsr2l,c
   799   000956  6ADA               	clrf	fsr2h,c
   800   000958  50DF               	movf	indf2,w,c
   801   00095A  6E0E               	movwf	??_vfpfcnvrt^0,c
   802   00095C  500E               	movf	??_vfpfcnvrt^0,w,c
   803   00095E  6E01               	movwf	fputc@c^0,c
   804   000960  6A02               	clrf	(fputc@c+1)^0,c
   805   000962  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
   806   000966  EC91  F005         	call	_fputc	;wreg free
   807   00096A  2A15               	incf	vfpfcnvrt@c^0,f,c
   808   00096C                     l1193:
   809                           
   810                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
   811   00096C  0E20               	movlw	32
   812   00096E  1815               	xorwf	vfpfcnvrt@c^0,w,c
   813   000970  A4D8               	btfss	status,2,c
   814   000972  EFBD  F004         	goto	u581
   815   000976  EFBF  F004         	goto	u580
   816   00097A                     u581:
   817   00097A  EFA8  F004         	goto	l1189
   818   00097E                     u580:
   819   00097E  EFD6  F004         	goto	l801
   820   000982                     l1195:
   821                           
   822                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
   823   000982  500C               	movf	vfpfcnvrt@fmt^0,w,c
   824   000984  6ED9               	movwf	fsr2l,c
   825   000986  6ADA               	clrf	fsr2h,c
   826   000988  2ADF               	incf	indf2,f,c
   827   00098A  EFD6  F004         	goto	l801
   828   00098E                     l1199:
   829                           
   830                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
   831   00098E  500C               	movf	vfpfcnvrt@fmt^0,w,c
   832   000990  6ED9               	movwf	fsr2l,c
   833   000992  6ADA               	clrf	fsr2h,c
   834   000994  CFDF FFF6          	movff	indf2,tblptrl
   835   000998                     	if	0	;There is only one active tblptr byte
   836   000998                     	endif
   837   000998                     	if	0	;tblptru may be non-zero
   838   000998                     	endif
   839   000998                     	if	0	;tblptru may be non-zero
   840   000998                     	endif
   841   000998  0008               	tblrd		*
   842   00099A  50F5               	movf	tablat,w,c
   843   00099C  6E01               	movwf	fputc@c^0,c
   844   00099E  6A02               	clrf	(fputc@c+1)^0,c
   845   0009A0  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
   846   0009A4  EC91  F005         	call	_fputc	;wreg free
   847   0009A8  EFC1  F004         	goto	l1195
   848   0009AC                     l801:
   849   0009AC  0012               	return		;funcret
   850   0009AE                     __end_of_vfpfcnvrt:
   851                           	callstack 0
   852                           
   853 ;; *************** function _fputc *****************
   854 ;; Defined at:
   855 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  c               2    0[COMRAM] int 
   858 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
   859 ;;		 -> sprintf@f(12), 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  2    0[COMRAM] int 
   864 ;; Registers used:
   865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   871 ;;      Params:         3       0       0       0       0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0       0       0       0       0
   873 ;;      Temps:          5       0       0       0       0       0       0       0       0
   874 ;;      Totals:         8       0       0       0       0       0       0       0       0
   875 ;;Total ram usage:        8 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; Hardware stack levels required when called: 1
   878 ;; This function calls:
   879 ;;		_putch
   880 ;; This function is called by:
   881 ;;		_vfpfcnvrt
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text4
   886   000B22                     __ptext4:
   887                           	callstack 0
   888   000B22                     _fputc:
   889                           	callstack 26
   890   000B22  5003               	movf	fputc@fp^0,w,c
   891   000B24  B4D8               	btfsc	status,2,c
   892   000B26  EF97  F005         	goto	u441
   893   000B2A  EF99  F005         	goto	u440
   894   000B2E                     u441:
   895   000B2E  EFA1  F005         	goto	l1141
   896   000B32                     u440:
   897   000B32  5003               	movf	fputc@fp^0,w,c
   898   000B34  A4D8               	btfss	status,2,c
   899   000B36  EF9F  F005         	goto	u451
   900   000B3A  EFA1  F005         	goto	u450
   901   000B3E                     u451:
   902   000B3E  EFA6  F005         	goto	l1143
   903   000B42                     u450:
   904   000B42                     l1141:
   905   000B42  5001               	movf	fputc@c^0,w,c
   906   000B44  ECBC  F006         	call	_putch
   907   000B48  EFE5  F005         	goto	l826
   908   000B4C                     l1143:
   909   000B4C  5003               	movf	fputc@fp^0,w,c
   910   000B4E  6ED9               	movwf	fsr2l,c
   911   000B50  6ADA               	clrf	fsr2h,c
   912   000B52  0E0A               	movlw	10
   913   000B54  26D9               	addwf	fsr2l,f,c
   914   000B56  50DE               	movf	postinc2,w,c
   915   000B58  10DE               	iorwf	postinc2,w,c
   916   000B5A  B4D8               	btfsc	status,2,c
   917   000B5C  EFB2  F005         	goto	u461
   918   000B60  EFB4  F005         	goto	u460
   919   000B64                     u461:
   920   000B64  EFCD  F005         	goto	l1147
   921   000B68                     u460:
   922   000B68  5003               	movf	fputc@fp^0,w,c
   923   000B6A  6ED9               	movwf	fsr2l,c
   924   000B6C  6ADA               	clrf	fsr2h,c
   925   000B6E  0E0A               	movlw	10
   926   000B70  26D9               	addwf	fsr2l,f,c
   927   000B72  5003               	movf	fputc@fp^0,w,c
   928   000B74  6EE1               	movwf	fsr1l,c
   929   000B76  6AE2               	clrf	fsr1h,c
   930   000B78  0E03               	movlw	3
   931   000B7A  26E1               	addwf	fsr1l,f,c
   932   000B7C  50DE               	movf	postinc2,w,c
   933   000B7E  5CE6               	subwf	postinc1,w,c
   934   000B80  50E6               	movf	postinc1,w,c
   935   000B82  0A80               	xorlw	128
   936   000B84  6E08               	movwf	(??_fputc+4)^0,c
   937   000B86  50DE               	movf	postinc2,w,c
   938   000B88  0A80               	xorlw	128
   939   000B8A  5808               	subwfb	(??_fputc+4)^0,w,c
   940   000B8C  B0D8               	btfsc	status,0,c
   941   000B8E  EFCB  F005         	goto	u471
   942   000B92  EFCD  F005         	goto	u470
   943   000B96                     u471:
   944   000B96  EFE5  F005         	goto	l826
   945   000B9A                     u470:
   946   000B9A                     l1147:
   947   000B9A  5003               	movf	fputc@fp^0,w,c
   948   000B9C  6ED9               	movwf	fsr2l,c
   949   000B9E  6ADA               	clrf	fsr2h,c
   950   000BA0  0E03               	movlw	3
   951   000BA2  26D9               	addwf	fsr2l,f,c
   952   000BA4  50DF               	movf	indf2,w,c
   953   000BA6  6E04               	movwf	??_fputc^0,c
   954   000BA8  5003               	movf	fputc@fp^0,w,c
   955   000BAA  6ED9               	movwf	fsr2l,c
   956   000BAC  6ADA               	clrf	fsr2h,c
   957   000BAE  50DF               	movf	indf2,w,c
   958   000BB0  2404               	addwf	??_fputc^0,w,c
   959   000BB2  6ED9               	movwf	fsr2l,c
   960   000BB4  6ADA               	clrf	fsr2h,c
   961   000BB6  C001  FFDF         	movff	fputc@c,indf2
   962   000BBA  5003               	movf	fputc@fp^0,w,c
   963   000BBC  6ED9               	movwf	fsr2l,c
   964   000BBE  6ADA               	clrf	fsr2h,c
   965   000BC0  0E03               	movlw	3
   966   000BC2  26D9               	addwf	fsr2l,f,c
   967   000BC4  2ADE               	incf	postinc2,f,c
   968   000BC6  0E00               	movlw	0
   969   000BC8  22DD               	addwfc	postdec2,f,c
   970   000BCA                     l826:
   971   000BCA  0012               	return		;funcret
   972   000BCC                     __end_of_fputc:
   973                           	callstack 0
   974                           
   975 ;; *************** function _putch *****************
   976 ;; Defined at:
   977 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  c               1    wreg     unsigned char 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  c               1    0[COMRAM] unsigned char 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   991 ;;      Params:         0       0       0       0       0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0       0       0
   994 ;;      Totals:         0       0       0       0       0       0       0       0       0
   995 ;;Total ram usage:        0 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; This function calls:
   998 ;;		Nothing
   999 ;; This function is called by:
  1000 ;;		_fputc
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text5
  1005   000D78                     __ptext5:
  1006                           	callstack 0
  1007   000D78                     _putch:
  1008                           	callstack 26
  1009   000D78  0012               	return		;funcret
  1010   000D7A                     __end_of_putch:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _abs *****************
  1014 ;; Defined at:
  1015 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  a               2    6[COMRAM] int 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  2    6[COMRAM] int 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1029 ;;      Params:         2       0       0       0       0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1031 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1032 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1033 ;;Total ram usage:        4 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_vfpfcnvrt
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text6
  1043   000CD0                     __ptext6:
  1044                           	callstack 0
  1045   000CD0                     _abs:
  1046                           	callstack 27
  1047   000CD0  BE08               	btfsc	(abs@a+1)^0,7,c
  1048   000CD2  EF6D  F006         	goto	u481
  1049   000CD6  EF6F  F006         	goto	u480
  1050   000CDA                     u481:
  1051   000CDA  EF75  F006         	goto	l811
  1052   000CDE                     u480:
  1053   000CDE  C007  F007         	movff	abs@a,?_abs
  1054   000CE2  C008  F008         	movff	abs@a+1,?_abs+1
  1055   000CE6  EF81  F006         	goto	l814
  1056   000CEA                     l811:
  1057   000CEA  C007  F009         	movff	abs@a,??_abs
  1058   000CEE  C008  F00A         	movff	abs@a+1,??_abs+1
  1059   000CF2  1E09               	comf	??_abs^0,f,c
  1060   000CF4  1E0A               	comf	(??_abs+1)^0,f,c
  1061   000CF6  4A09               	infsnz	??_abs^0,f,c
  1062   000CF8  2A0A               	incf	(??_abs+1)^0,f,c
  1063   000CFA  C009  F007         	movff	??_abs,?_abs
  1064   000CFE  C00A  F008         	movff	??_abs+1,?_abs+1
  1065   000D02                     l814:
  1066   000D02  0012               	return		;funcret
  1067   000D04                     __end_of_abs:
  1068                           	callstack 0
  1069                           
  1070 ;; *************** function ___awmod *****************
  1071 ;; Defined at:
  1072 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  dividend        2    0[COMRAM] int 
  1075 ;;  divisor         2    2[COMRAM] int 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  sign            1    5[COMRAM] unsigned char 
  1078 ;;  counter         1    4[COMRAM] unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  2    0[COMRAM] int 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1088 ;;      Params:         4       0       0       0       0       0       0       0       0
  1089 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1091 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1092 ;;Total ram usage:        6 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_vfpfcnvrt
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text7
  1102   000A72                     __ptext7:
  1103                           	callstack 0
  1104   000A72                     ___awmod:
  1105                           	callstack 27
  1106   000A72  0E00               	movlw	0
  1107   000A74  6E06               	movwf	___awmod@sign^0,c
  1108   000A76  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1109   000A78  EF42  F005         	goto	u380
  1110   000A7C  EF40  F005         	goto	u381
  1111   000A80                     u381:
  1112   000A80  EF48  F005         	goto	l1109
  1113   000A84                     u380:
  1114   000A84  6C01               	negf	___awmod@dividend^0,c
  1115   000A86  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1116   000A88  B0D8               	btfsc	status,0,c
  1117   000A8A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1118   000A8C  0E01               	movlw	1
  1119   000A8E  6E06               	movwf	___awmod@sign^0,c
  1120   000A90                     l1109:
  1121   000A90  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1122   000A92  EF4F  F005         	goto	u390
  1123   000A96  EF4D  F005         	goto	u391
  1124   000A9A                     u391:
  1125   000A9A  EF53  F005         	goto	l1113
  1126   000A9E                     u390:
  1127   000A9E  6C03               	negf	___awmod@divisor^0,c
  1128   000AA0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1129   000AA2  B0D8               	btfsc	status,0,c
  1130   000AA4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1131   000AA6                     l1113:
  1132   000AA6  5003               	movf	___awmod@divisor^0,w,c
  1133   000AA8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1134   000AAA  B4D8               	btfsc	status,2,c
  1135   000AAC  EF5A  F005         	goto	u401
  1136   000AB0  EF5C  F005         	goto	u400
  1137   000AB4                     u401:
  1138   000AB4  EF80  F005         	goto	l1129
  1139   000AB8                     u400:
  1140   000AB8  0E01               	movlw	1
  1141   000ABA  6E05               	movwf	___awmod@counter^0,c
  1142   000ABC  EF64  F005         	goto	l1119
  1143   000AC0                     l1117:
  1144   000AC0  90D8               	bcf	status,0,c
  1145   000AC2  3603               	rlcf	___awmod@divisor^0,f,c
  1146   000AC4  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1147   000AC6  2A05               	incf	___awmod@counter^0,f,c
  1148   000AC8                     l1119:
  1149   000AC8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1150   000ACA  EF69  F005         	goto	u411
  1151   000ACE  EF6B  F005         	goto	u410
  1152   000AD2                     u411:
  1153   000AD2  EF60  F005         	goto	l1117
  1154   000AD6                     u410:
  1155   000AD6                     l1121:
  1156   000AD6  5003               	movf	___awmod@divisor^0,w,c
  1157   000AD8  5C01               	subwf	___awmod@dividend^0,w,c
  1158   000ADA  5004               	movf	(___awmod@divisor+1)^0,w,c
  1159   000ADC  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1160   000ADE  A0D8               	btfss	status,0,c
  1161   000AE0  EF74  F005         	goto	u421
  1162   000AE4  EF76  F005         	goto	u420
  1163   000AE8                     u421:
  1164   000AE8  EF7A  F005         	goto	l1125
  1165   000AEC                     u420:
  1166   000AEC  5003               	movf	___awmod@divisor^0,w,c
  1167   000AEE  5E01               	subwf	___awmod@dividend^0,f,c
  1168   000AF0  5004               	movf	(___awmod@divisor+1)^0,w,c
  1169   000AF2  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1170   000AF4                     l1125:
  1171   000AF4  90D8               	bcf	status,0,c
  1172   000AF6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1173   000AF8  3203               	rrcf	___awmod@divisor^0,f,c
  1174   000AFA  2E05               	decfsz	___awmod@counter^0,f,c
  1175   000AFC  EF6B  F005         	goto	l1121
  1176   000B00                     l1129:
  1177   000B00  5006               	movf	___awmod@sign^0,w,c
  1178   000B02  B4D8               	btfsc	status,2,c
  1179   000B04  EF86  F005         	goto	u431
  1180   000B08  EF88  F005         	goto	u430
  1181   000B0C                     u431:
  1182   000B0C  EF8C  F005         	goto	l1133
  1183   000B10                     u430:
  1184   000B10  6C01               	negf	___awmod@dividend^0,c
  1185   000B12  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1186   000B14  B0D8               	btfsc	status,0,c
  1187   000B16  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1188   000B18                     l1133:
  1189   000B18  C001  F001         	movff	___awmod@dividend,?___awmod
  1190   000B1C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1191   000B20  0012               	return		;funcret
  1192   000B22                     __end_of___awmod:
  1193                           	callstack 0
  1194                           
  1195 ;; *************** function ___awdiv *****************
  1196 ;; Defined at:
  1197 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  dividend        2    0[COMRAM] int 
  1200 ;;  divisor         2    2[COMRAM] int 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  quotient        2    6[COMRAM] int 
  1203 ;;  sign            1    5[COMRAM] unsigned char 
  1204 ;;  counter         1    4[COMRAM] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  2    0[COMRAM] int 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1214 ;;      Params:         4       0       0       0       0       0       0       0       0
  1215 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1217 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1218 ;;Total ram usage:        8 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_vfpfcnvrt
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text8
  1228   0009AE                     __ptext8:
  1229                           	callstack 0
  1230   0009AE                     ___awdiv:
  1231                           	callstack 27
  1232   0009AE  0E00               	movlw	0
  1233   0009B0  6E06               	movwf	___awdiv@sign^0,c
  1234   0009B2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1235   0009B4  EFE0  F004         	goto	u320
  1236   0009B8  EFDE  F004         	goto	u321
  1237   0009BC                     u321:
  1238   0009BC  EFE6  F004         	goto	l1065
  1239   0009C0                     u320:
  1240   0009C0  6C03               	negf	___awdiv@divisor^0,c
  1241   0009C2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1242   0009C4  B0D8               	btfsc	status,0,c
  1243   0009C6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1244   0009C8  0E01               	movlw	1
  1245   0009CA  6E06               	movwf	___awdiv@sign^0,c
  1246   0009CC                     l1065:
  1247   0009CC  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1248   0009CE  EFED  F004         	goto	u330
  1249   0009D2  EFEB  F004         	goto	u331
  1250   0009D6                     u331:
  1251   0009D6  EFF3  F004         	goto	l1071
  1252   0009DA                     u330:
  1253   0009DA  6C01               	negf	___awdiv@dividend^0,c
  1254   0009DC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1255   0009DE  B0D8               	btfsc	status,0,c
  1256   0009E0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1257   0009E2  0E01               	movlw	1
  1258   0009E4  1A06               	xorwf	___awdiv@sign^0,f,c
  1259   0009E6                     l1071:
  1260   0009E6  0E00               	movlw	0
  1261   0009E8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1262   0009EA  0E00               	movlw	0
  1263   0009EC  6E07               	movwf	___awdiv@quotient^0,c
  1264   0009EE  5003               	movf	___awdiv@divisor^0,w,c
  1265   0009F0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1266   0009F2  B4D8               	btfsc	status,2,c
  1267   0009F4  EFFE  F004         	goto	u341
  1268   0009F8  EF00  F005         	goto	u340
  1269   0009FC                     u341:
  1270   0009FC  EF28  F005         	goto	l1093
  1271   000A00                     u340:
  1272   000A00  0E01               	movlw	1
  1273   000A02  6E05               	movwf	___awdiv@counter^0,c
  1274   000A04  EF08  F005         	goto	l1079
  1275   000A08                     l1077:
  1276   000A08  90D8               	bcf	status,0,c
  1277   000A0A  3603               	rlcf	___awdiv@divisor^0,f,c
  1278   000A0C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1279   000A0E  2A05               	incf	___awdiv@counter^0,f,c
  1280   000A10                     l1079:
  1281   000A10  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1282   000A12  EF0D  F005         	goto	u351
  1283   000A16  EF0F  F005         	goto	u350
  1284   000A1A                     u351:
  1285   000A1A  EF04  F005         	goto	l1077
  1286   000A1E                     u350:
  1287   000A1E                     l1081:
  1288   000A1E  90D8               	bcf	status,0,c
  1289   000A20  3607               	rlcf	___awdiv@quotient^0,f,c
  1290   000A22  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1291   000A24  5003               	movf	___awdiv@divisor^0,w,c
  1292   000A26  5C01               	subwf	___awdiv@dividend^0,w,c
  1293   000A28  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1294   000A2A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1295   000A2C  A0D8               	btfss	status,0,c
  1296   000A2E  EF1B  F005         	goto	u361
  1297   000A32  EF1D  F005         	goto	u360
  1298   000A36                     u361:
  1299   000A36  EF22  F005         	goto	l1089
  1300   000A3A                     u360:
  1301   000A3A  5003               	movf	___awdiv@divisor^0,w,c
  1302   000A3C  5E01               	subwf	___awdiv@dividend^0,f,c
  1303   000A3E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1304   000A40  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1305   000A42  8007               	bsf	___awdiv@quotient^0,0,c
  1306   000A44                     l1089:
  1307   000A44  90D8               	bcf	status,0,c
  1308   000A46  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1309   000A48  3203               	rrcf	___awdiv@divisor^0,f,c
  1310   000A4A  2E05               	decfsz	___awdiv@counter^0,f,c
  1311   000A4C  EF0F  F005         	goto	l1081
  1312   000A50                     l1093:
  1313   000A50  5006               	movf	___awdiv@sign^0,w,c
  1314   000A52  B4D8               	btfsc	status,2,c
  1315   000A54  EF2E  F005         	goto	u371
  1316   000A58  EF30  F005         	goto	u370
  1317   000A5C                     u371:
  1318   000A5C  EF34  F005         	goto	l1097
  1319   000A60                     u370:
  1320   000A60  6C07               	negf	___awdiv@quotient^0,c
  1321   000A62  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1322   000A64  B0D8               	btfsc	status,0,c
  1323   000A66  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1324   000A68                     l1097:
  1325   000A68  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1326   000A6C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1327   000A70  0012               	return		;funcret
  1328   000A72                     __end_of___awdiv:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function _USART_Transmit *****************
  1332 ;; Defined at:
  1333 ;;		line 76 in file "xd.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  str             1    0[COMRAM] PTR const unsigned char 
  1336 ;;		 -> datos(40), 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1348 ;;      Params:         1       0       0       0       0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1351 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1352 ;;Total ram usage:        1 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text9
  1362   000C66                     __ptext9:
  1363                           	callstack 0
  1364   000C66                     _USART_Transmit:
  1365                           	callstack 30
  1366   000C66                     
  1367                           ;xd.c: 76: void USART_Transmit(const char* str);xd.c: 77: {;xd.c: 78:     while(*str)
  1368   000C66  EF42  F006         	goto	l1253
  1369   000C6A                     l75:
  1370   000C6A  A2AC               	btfss	172,1,c	;volatile
  1371   000C6C  EF3A  F006         	goto	u601
  1372   000C70  EF3C  F006         	goto	u600
  1373   000C74                     u601:
  1374   000C74  EF35  F006         	goto	l75
  1375   000C78                     u600:
  1376   000C78                     
  1377                           ;xd.c: 81:         TXREG = *str++;
  1378   000C78  5001               	movf	USART_Transmit@str^0,w,c
  1379   000C7A  6ED9               	movwf	fsr2l,c
  1380   000C7C  6ADA               	clrf	fsr2h,c
  1381   000C7E  50DF               	movf	indf2,w,c
  1382   000C80  6EAD               	movwf	173,c	;volatile
  1383   000C82  2A01               	incf	USART_Transmit@str^0,f,c
  1384   000C84                     l1253:
  1385                           
  1386                           ;xd.c: 78:     while(*str)
  1387   000C84  5001               	movf	USART_Transmit@str^0,w,c
  1388   000C86  6ED9               	movwf	fsr2l,c
  1389   000C88  6ADA               	clrf	fsr2h,c
  1390   000C8A  50DF               	movf	indf2,w,c
  1391   000C8C  A4D8               	btfss	status,2,c
  1392   000C8E  EF4B  F006         	goto	u611
  1393   000C92  EF4D  F006         	goto	u610
  1394   000C96                     u611:
  1395   000C96  EF35  F006         	goto	l75
  1396   000C9A                     u610:
  1397   000C9A  0012               	return		;funcret
  1398   000C9C                     __end_of_USART_Transmit:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _USART_Init *****************
  1402 ;; Defined at:
  1403 ;;		line 64 in file "xd.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, status,2
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1417 ;;      Params:         0       0       0       0       0       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1420 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1421 ;;Total ram usage:        0 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text10
  1431   000D64                     __ptext10:
  1432                           	callstack 0
  1433   000D64                     _USART_Init:
  1434                           	callstack 30
  1435   000D64                     
  1436                           ;xd.c: 66:     RCSTAbits.SPEN = 1;
  1437   000D64  8EAB               	bsf	171,7,c	;volatile
  1438                           
  1439                           ;xd.c: 67:     TXSTAbits.TX9 = 0;
  1440   000D66  9CAC               	bcf	172,6,c	;volatile
  1441                           
  1442                           ;xd.c: 68:     TXSTAbits.TXEN = 1;
  1443   000D68  8AAC               	bsf	172,5,c	;volatile
  1444                           
  1445                           ;xd.c: 69:     TXSTAbits.SYNC = 0;
  1446   000D6A  98AC               	bcf	172,4,c	;volatile
  1447                           
  1448                           ;xd.c: 70:     RCSTAbits.RX9 = 0;
  1449   000D6C  9CAB               	bcf	171,6,c	;volatile
  1450                           
  1451                           ;xd.c: 71:     RCSTAbits.CREN = 1;
  1452   000D6E  88AB               	bsf	171,4,c	;volatile
  1453                           
  1454                           ;xd.c: 72:     TXSTAbits.BRGH = 1;
  1455   000D70  84AC               	bsf	172,2,c	;volatile
  1456   000D72                     
  1457                           ;xd.c: 73:     SPBRG = 25;
  1458   000D72  0E19               	movlw	25
  1459   000D74  6EAF               	movwf	175,c	;volatile
  1460   000D76  0012               	return		;funcret
  1461   000D78                     __end_of_USART_Init:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function _GPIO_Init *****************
  1465 ;; Defined at:
  1466 ;;		line 38 in file "xd.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1483 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text11
  1494   000D4C                     __ptext11:
  1495                           	callstack 0
  1496   000D4C                     _GPIO_Init:
  1497                           	callstack 30
  1498   000D4C                     
  1499                           ;xd.c: 41:     TRISD = 0x00;
  1500   000D4C  0E00               	movlw	0
  1501   000D4E  6E95               	movwf	149,c	;volatile
  1502                           
  1503                           ;xd.c: 42:     ANSELD = 0x00;
  1504   000D50  0E00               	movlw	0
  1505   000D52  010F               	movlb	15	; () banked
  1506   000D54  6F5E               	movwf	94,b	;volatile
  1507   000D56                     
  1508                           ; BSR set to: 15
  1509                           ;xd.c: 45:     TRISA = 0xFF;
  1510   000D56  6892               	setf	146,c	;volatile
  1511   000D58                     
  1512                           ; BSR set to: 15
  1513                           ;xd.c: 46:     ANSELA = 0xFF;
  1514   000D58  695B               	setf	91,b	;volatile
  1515   000D5A                     
  1516                           ; BSR set to: 15
  1517                           ;xd.c: 49:     TRISCbits.RC6 = 0;
  1518   000D5A  9C94               	bcf	148,6,c	;volatile
  1519   000D5C                     
  1520                           ; BSR set to: 15
  1521                           ;xd.c: 50:     TRISCbits.RC7 = 1;
  1522   000D5C  8E94               	bsf	148,7,c	;volatile
  1523                           
  1524                           ;xd.c: 51:     ANSELC = 0x00;
  1525   000D5E  0E00               	movlw	0
  1526   000D60  6F5D               	movwf	93,b	;volatile
  1527   000D62                     
  1528                           ; BSR set to: 15
  1529   000D62  0012               	return		;funcret
  1530   000D64                     __end_of_GPIO_Init:
  1531                           	callstack 0
  1532                           
  1533 ;; *************** function _ADC_Init *****************
  1534 ;; Defined at:
  1535 ;;		line 54 in file "xd.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1549 ;;      Params:         0       0       0       0       0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1552 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels used: 1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text12
  1563   000D2A                     __ptext12:
  1564                           	callstack 0
  1565   000D2A                     _ADC_Init:
  1566                           	callstack 30
  1567   000D2A                     
  1568                           ;xd.c: 56:     ADCON1bits.PVCFG = 0;
  1569   000D2A  0EF3               	movlw	-13
  1570   000D2C  16C1               	andwf	193,f,c	;volatile
  1571                           
  1572                           ;xd.c: 57:     ADCON2bits.ADCS = 0b101;
  1573   000D2E  50C0               	movf	192,w,c	;volatile
  1574   000D30  0BF8               	andlw	-8
  1575   000D32  0905               	iorlw	5
  1576   000D34  6EC0               	movwf	192,c	;volatile
  1577                           
  1578                           ;xd.c: 58:     ADCON0bits.CHS = 1;
  1579   000D36  50C2               	movf	194,w,c	;volatile
  1580   000D38  0B83               	andlw	-125
  1581   000D3A  0904               	iorlw	4
  1582   000D3C  6EC2               	movwf	194,c	;volatile
  1583   000D3E                     
  1584                           ;xd.c: 59:     ADCON2bits.ADFM = 1;
  1585   000D3E  8EC0               	bsf	192,7,c	;volatile
  1586                           
  1587                           ;xd.c: 60:     ADCON2bits.ACQT = 0b011;
  1588   000D40  50C0               	movf	192,w,c	;volatile
  1589   000D42  0BC7               	andlw	-57
  1590   000D44  0918               	iorlw	24
  1591   000D46  6EC0               	movwf	192,c	;volatile
  1592   000D48                     
  1593                           ;xd.c: 61:     ADCON0bits.ADON = 1;
  1594   000D48  80C2               	bsf	194,0,c	;volatile
  1595   000D4A  0012               	return		;funcret
  1596   000D4C                     __end_of_ADC_Init:
  1597                           	callstack 0
  1598                           
  1599                           	psect	rparam
  1600   000000                     
  1601                           	psect	config
  1602                           
  1603                           ;Config register CONFIG1L @ 0x300000
  1604                           ;	PLL Selection
  1605                           ;	PLLSEL = PLL4X, 4x clock multiplier
  1606                           ;	PLL Enable Configuration bit
  1607                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  1608                           ;	CPU System Clock Postscaler
  1609                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1610                           ;	Low Speed USB mode with 48 MHz system clock
  1611                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1612   300000                     	org	3145728
  1613   300000  00                 	db	0
  1614                           
  1615                           ;Config register CONFIG1H @ 0x300001
  1616                           ;	Oscillator Selection
  1617                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  1618                           ;	Primary Oscillator Shutdown
  1619                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  1620                           ;	Fail-Safe Clock Monitor
  1621                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1622                           ;	Internal/External Oscillator Switchover
  1623                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1624   300001                     	org	3145729
  1625   300001  09                 	db	9
  1626                           
  1627                           ;Config register CONFIG2L @ 0x300002
  1628                           ;	Power-up Timer Enable
  1629                           ;	nPWRTEN = ON, Power up timer enabled
  1630                           ;	Brown-out Reset Enable
  1631                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  1632                           ;	Brown-out Reset Voltage
  1633                           ;	BORV = 190, BOR set to 1.9V nominal
  1634                           ;	Low-Power Brown-out Reset
  1635                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1636   300002                     	org	3145730
  1637   300002  58                 	db	88
  1638                           
  1639                           ;Config register CONFIG2H @ 0x300003
  1640                           ;	Watchdog Timer Enable bits
  1641                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1642                           ;	Watchdog Timer Postscaler
  1643                           ;	WDTPS = 32768, 1:32768
  1644   300003                     	org	3145731
  1645   300003  3C                 	db	60
  1646                           
  1647                           ; Padding undefined space
  1648   300004                     	org	3145732
  1649   300004  FF                 	db	255
  1650                           
  1651                           ;Config register CONFIG3H @ 0x300005
  1652                           ;	CCP2 MUX bit
  1653                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1654                           ;	PORTB A/D Enable bit
  1655                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1656                           ;	Timer3 Clock Input MUX bit
  1657                           ;	T3CMX = RC0, T3CKI function is on RC0
  1658                           ;	SDO Output MUX bit
  1659                           ;	SDOMX = RB3, SDO function is on RB3
  1660                           ;	Master Clear Reset Pin Enable
  1661                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1662   300005                     	org	3145733
  1663   300005  D1                 	db	209
  1664                           
  1665                           ;Config register CONFIG4L @ 0x300006
  1666                           ;	Stack Full/Underflow Reset
  1667                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1668                           ;	Single-Supply ICSP Enable bit
  1669                           ;	LVP = OFF, Single-Supply ICSP disabled
  1670                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1671                           ;	ICPRT = OFF, ICPORT disabled
  1672                           ;	Extended Instruction Set Enable bit
  1673                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1674                           ;	Background Debugger Enable bit
  1675                           ;	DEBUG = 0x1, unprogrammed default
  1676   300006                     	org	3145734
  1677   300006  81                 	db	129
  1678                           
  1679                           ; Padding undefined space
  1680   300007                     	org	3145735
  1681   300007  FF                 	db	255
  1682                           
  1683                           ;Config register CONFIG5L @ 0x300008
  1684                           ;	Block 0 Code Protect
  1685                           ;	CP0 = OFF, Block 0 is not code-protected
  1686                           ;	Block 1 Code Protect
  1687                           ;	CP1 = OFF, Block 1 is not code-protected
  1688                           ;	Block 2 Code Protect
  1689                           ;	CP2 = OFF, Block 2 is not code-protected
  1690                           ;	Block 3 Code Protect
  1691                           ;	CP3 = OFF, Block 3 is not code-protected
  1692   300008                     	org	3145736
  1693   300008  0F                 	db	15
  1694                           
  1695                           ;Config register CONFIG5H @ 0x300009
  1696                           ;	Boot Block Code Protect
  1697                           ;	CPB = OFF, Boot block is not code-protected
  1698                           ;	Data EEPROM Code Protect
  1699                           ;	CPD = OFF, Data EEPROM is not code-protected
  1700   300009                     	org	3145737
  1701   300009  C0                 	db	192
  1702                           
  1703                           ;Config register CONFIG6L @ 0x30000A
  1704                           ;	Block 0 Write Protect
  1705                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1706                           ;	Block 1 Write Protect
  1707                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1708                           ;	Block 2 Write Protect
  1709                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1710                           ;	Block 3 Write Protect
  1711                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1712   30000A                     	org	3145738
  1713   30000A  0F                 	db	15
  1714                           
  1715                           ;Config register CONFIG6H @ 0x30000B
  1716                           ;	Configuration Registers Write Protect
  1717                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1718                           ;	Boot Block Write Protect
  1719                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1720                           ;	Data EEPROM Write Protect
  1721                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1722   30000B                     	org	3145739
  1723   30000B  E0                 	db	224
  1724                           
  1725                           ;Config register CONFIG7L @ 0x30000C
  1726                           ;	Block 0 Table Read Protect
  1727                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1728                           ;	Block 1 Table Read Protect
  1729                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1730                           ;	Block 2 Table Read Protect
  1731                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1732                           ;	Block 3 Table Read Protect
  1733                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1734   30000C                     	org	3145740
  1735   30000C  0F                 	db	15
  1736                           
  1737                           ;Config register CONFIG7H @ 0x30000D
  1738                           ;	Boot Block Table Read Protect
  1739                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1740   30000D                     	org	3145741
  1741   30000D  40                 	db	64
  1742                           tosu	equ	0xFFF
  1743                           tosh	equ	0xFFE
  1744                           tosl	equ	0xFFD
  1745                           stkptr	equ	0xFFC
  1746                           pclatu	equ	0xFFB
  1747                           pclath	equ	0xFFA
  1748                           pcl	equ	0xFF9
  1749                           tblptru	equ	0xFF8
  1750                           tblptrh	equ	0xFF7
  1751                           tblptrl	equ	0xFF6
  1752                           tablat	equ	0xFF5
  1753                           prodh	equ	0xFF4
  1754                           prodl	equ	0xFF3
  1755                           indf0	equ	0xFEF
  1756                           postinc0	equ	0xFEE
  1757                           postdec0	equ	0xFED
  1758                           preinc0	equ	0xFEC
  1759                           plusw0	equ	0xFEB
  1760                           fsr0h	equ	0xFEA
  1761                           fsr0l	equ	0xFE9
  1762                           wreg	equ	0xFE8
  1763                           indf1	equ	0xFE7
  1764                           postinc1	equ	0xFE6
  1765                           postdec1	equ	0xFE5
  1766                           preinc1	equ	0xFE4
  1767                           plusw1	equ	0xFE3
  1768                           fsr1h	equ	0xFE2
  1769                           fsr1l	equ	0xFE1
  1770                           bsr	equ	0xFE0
  1771                           indf2	equ	0xFDF
  1772                           postinc2	equ	0xFDE
  1773                           postdec2	equ	0xFDD
  1774                           preinc2	equ	0xFDC
  1775                           plusw2	equ	0xFDB
  1776                           fsr2h	equ	0xFDA
  1777                           fsr2l	equ	0xFD9
  1778                           status	equ	0xFD8

Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      81
    BANK0           160      0      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S840$buffer	PTR unsigned char  size(2) Largest target is 0

    S840$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 40
		 -> datos(BANK0[40]), 

    USART_Transmit@str	PTR const unsigned char  size(1) Largest target is 40
		 -> datos(BANK0[40]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3408
                                             42 COMRAM     2     2      0
                           _ADC_Init
                          _GPIO_Init
                         _USART_Init
                     _USART_Transmit
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    3287
                                             25 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2936
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    2586
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_Transmit                                       1     0      1     121
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _GPIO_Init
   _USART_Init
   _USART_Transmit
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      28       5       25.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      51       1       85.3%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRlllh       24      0       0      26        0.0%
BITBIGSFRllhhl      15      0       0      23        0.0%
BITBIGSFRllhhhh     10      0       0      22        0.0%
BITBIGSFRllhll       E      0       0      25        0.0%
BITBIGSFRlh          E      0       0      21        0.0%
BITBIGSFRlllll       8      0       0      28        0.0%
BITBIGSFRllllh       1      0       0      27        0.0%
BITBIGSFRllhlh       1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      79      29        0.0%
DATA                 0      0      79       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 26 23:10:39 2024

                     l70 0D76                       l64 0D62                       l56 0BE2  
                     l58 0BF0                       l67 0D4A                       l75 0C6A  
                     l79 0C9A             ___awdiv@sign 0006                      l316 0A70  
                    l329 0B20                      l801 09AC                      l811 0CEA  
                    l814 0D02                      l807 0C64                      l826 0BCA  
                    l763 0CCE                      l837 0D78                      u320 09C0  
                    u400 0AB8                      u321 09BC                      u401 0AB4  
                    u330 09DA                      u410 0AD6                      u331 09D6  
                    u411 0AD2                      u340 0A00                      u420 0AEC  
                    u500 085E                      u341 09FC                      u421 0AE8  
                    u501 085A                      u350 0A1E                      u430 0B10  
                    u510 0876                      u351 0A1A                      u431 0B0C  
                    u511 0872                      u600 0C78                      u360 0A3A  
                    u440 0B32                      u520 08AC                      u601 0C74  
                    u361 0A36                      u441 0B2E                      u521 08A6  
                    u610 0C9A                      u370 0A60                      u450 0B42  
                    u530 08AE                      u611 0C96                      u371 0A5C  
                    u451 0B3E                      u380 0A84                      u460 0B68  
                    u540 090E                      u620 0BF0                      u381 0A80  
                    u461 0B64                      u541 090A                      u621 0BEC  
                    u390 0A9E                      u470 0B9A                      u550 091E  
                    u391 0A9A                      u471 0B96                      u551 091A  
                    u480 0CDE                      u560 092E                      u481 0CDA  
                    u561 092A                      u570 093E                      u490 0824  
                    u571 093A                      u491 0820                      u580 097E  
                    u581 097A                      u637 0C18                      u590 0C5C  
                    u591 0C58                      _abs 0CD0             ___awmod@sign 0006  
 __end_of_USART_Transmit 0C9C                      wreg 0FE8                     l1101 0A72  
                   l1111 0A9E                     l1103 0A76                     l1121 0AD6  
                   l1113 0AA6                     l1105 0A84                     l1131 0B10  
                   l1123 0AEC                     l1115 0AB8                     l1107 0A8C  
                   l1211 0C5C                     ?_abs 0007                     l1221 0D5A  
                   l1061 09C0                     l1133 0B18                     l1125 0AF4  
                   l1117 0AC0                     l1109 0A90                     l1141 0B42  
                   l1205 0C2C                     l1223 0D5C                     l1215 0D4C  
                   l1231 0D64                     l1071 09E6                     l1063 09C8  
                   l1127 0AFA                     l1119 0AC8                     l1151 0CD0  
                   l1143 0B4C                     l1207 0C34                     l1225 0D2A  
                   l1217 0D56                     l1233 0D72                     l1081 0A1E  
                   l1073 09EE                     l1065 09CC                     l1057 09AE  
                   l1129 0B00                     l1153 0CDE                     l1145 0B68  
                   l1137 0B22                     l1161 0838                     l1209 0C44  
                   l1241 0CB4                     l1227 0D3E                     l1219 0D58  
                   l1251 0C82                     l1091 0A4A                     l1083 0A24  
                   l1075 0A00                     l1067 09DA                     l1059 09B2  
                   l1147 0B9A                     l1139 0B32                     l1171 088E  
                   l1163 083C                     l1155 0806                     l1243 0CC4  
                   l1235 0C9C                     l1229 0D48                     l1253 0C84  
                   l1085 0A3A                     l1077 0A08                     l1093 0A50  
                   l1069 09E2                     l1181 090E                     l1173 0898  
                   l1165 0846                     l1157 0824                     l1237 0CA4  
                   l1261 0BDC                     l1247 0C66                     l1095 0A60  
                   l1087 0A42                     l1079 0A10                     l1191 096A  
                   l1183 091E                     l1175 08B0                     l1167 085E  
                   l1159 082C                     l1239 0CAC                     l1263 0BE0  
                   l1255 0BCC                     l1249 0C78                     l1097 0A68  
                   l1089 0A44                     l1185 092E                     l1193 096C  
                   l1177 08E0                     l1169 0876                     l1265 0BF4  
                   l1257 0BD4                     l1187 093E                     l1179 08FC  
                   l1195 0982                     l1267 0C06                     l1259 0BD8  
                   l1189 0950                     l1269 0C0E                     l1199 098E  
                   STR_1 0801                     abs@a 0007                     _dbuf 002D  
                   _main 0BCC                     _prec 004F                     fsr1h 0FE2  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9         __end_of_ADC_Init 0D4C                     start 0000  
           ___param_bank 0000                    ??_abs 0009                    ?_main 0001  
        __end_of___awdiv 0A72          __end_of___awmod 0B22          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _RCREG 0FAE             vfpfcnvrt@fmt 000C  
                  _SPBRG 0FAF                    _PORTD 0F83                    _TRISA 0F92  
                  _TRISD 0F95                    _TXREG 0FAD          ?_USART_Transmit 0001  
                  _datos 0060                    _flags 0051                    _fputc 0B22  
                  _width 004D                    _putch 0D78                    tablat 0FF5  
                  status 0FD8          __end_of_sprintf 0CD0              ?_USART_Init 0001  
        __initialization 0D04             __end_of_main 0C2C                   ??_main 002B  
          __activetblptr 0001        __end_of_GPIO_Init 0D64                   ?_fputc 0001  
                 _ADRESL 0FC3         ___awdiv@dividend 0001                   _ANSELA 0F5B  
                 ?_putch 0001                   _ANSELC 0F5D                   _ANSELD 0F5E  
                 _OSCCON 0FD3            vfpfcnvrt@done 000F             vfprintf@cfmt 0019  
              ??___awdiv 0005                ??___awmod 0005                   clear_0 0D0A  
                 clear_1 0D16         ___awdiv@quotient 0007          ___awmod@divisor 0003  
                 isa$std 0001          ___awmod@counter 0005                   fputc@c 0001  
              ?_ADC_Init 0001             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8                   putch@c 0001  
       __end_of_vfprintf 0C66                ??_sprintf 001E               __accesstop 0060  
__end_of__initialization 0D1C            ___rparam_used 0001           __pcstackCOMRAM 0001  
          __end_of_fputc 0BCC            __end_of_putch 0D7A               ??_ADC_Init 0001  
                ??_fputc 0004                  ??_putch 0001               __pbssBANK0 0060  
       ??_USART_Transmit 0002                  _OSCCON2 0FD2             ??_USART_Init 0001  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 09AE  
                ___awmod 0A72                ?_vfprintf 0016             __psmallconst 0800  
                __pcinit 0D04                  __ramtop 0800                  __ptext0 0BCC  
                __ptext1 0C9C                  __ptext2 0C2C                  __ptext3 0806  
                __ptext4 0B22                  __ptext5 0D78                  __ptext6 0CD0  
                __ptext7 0A72                  __ptext8 09AE                  __ptext9 0C66  
       ___awmod@dividend 0001       __end_of_USART_Init 0D78                  _sprintf 0C9C  
              _GPIO_Init 0D4C     end_of_initialization 0D1C                  fputc@fp 0003  
      __end_of_vfpfcnvrt 09AE                _RCSTAbits 0FAB                  postdec2 0FDD  
                postinc0 0FEE                  postinc1 0FE6                  postinc2 0FDE  
       vfpfcnvrt@convarg 0011               ??_vfprintf 0019                _TRISCbits 0F94  
             ?_GPIO_Init 0001                _TXSTAbits 0FAC              vfpfcnvrt@ap 000D  
            vfpfcnvrt@cp 0010              vfpfcnvrt@fp 000B      start_initialization 0D04  
            __end_of_abs 0D04              vfprintf@fmt 0017              __pbssCOMRAM 002D  
            ??_GPIO_Init 0001                 ?___awdiv 0001                 ?___awmod 0001  
            __smallconst 0800                 _ADC_Init 0D2A                 ?_sprintf 001A  
              _vfpfcnvrt 0806               _ADCON0bits 0FC2               _ADCON1bits 0FC1  
             _ADCON2bits 0FC0               vfpfcnvrt@c 0015                 __Hrparam 0000  
             vfprintf@ap 0018                 __Lrparam 0000               vfprintf@fp 0016  
           __Lsmallconst 0800               ?_vfpfcnvrt 000B               sprintf@fmt 001B  
               __ptext10 0D64                 __ptext11 0D4C                 __ptext12 0D2A  
      USART_Transmit@str 0001                 isa$xinst 0000                 _vfprintf 0C2C  
              sprintf@ap 001E              ??_vfpfcnvrt 000E                 sprintf@f 001F  
               sprintf@s 001A           _USART_Transmit 0C66               _USART_Init 0D64  
